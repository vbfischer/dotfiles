#!/usr/bin/env bash
# ======= tickle action plugin for Gina Trapani's todo.sh =======
# Adapted from (Tanja's tickler patch for todo.sh)[http://tanniespace.com/tickler-files-and-todosh/]
# Adapted as plugin by:  Braden Grams
# Adapted further by: Paul Mansfield <paul.mansfield@mansteck.co.uk>
# License: GPL, http://www.gnu.org/copyleft/gpl.html

#============ And now for some functions =================
useage()
{
    sed -e 's/^    //' <<EndUsage
        tickled
          Show all "tickled" todo items.
EndUsage
    exit 1
}

die()
{
    echo "$*"
    exit 1
}

case $1 in
"useage")
    useage
    ;;
*)
    # Head into tickler directory
    cd $TICKLER_DIR || exit 1
    # Find all the files
    FILES=$(find . -type f -size +1c ! -name *state.txt -name *[0123][0-9].txt)
    # For each file find its date
    for i in $FILES ; do
        TYPE=$(echo $i | awk -F '/' '{print $2}')
        NUMBER=$(echo $i | awk -F '/' '{print $3}')
        YEAR=$(date +'%Y')
        if [ $TYPE = "days" ] ; then
            MONTH=$(date +'%m')
            DAY=$NUMBER
        else
            MONTH=$NUMBER
            DAY="01"
        fi
        # Add date to start of each line
        exec < $i
        while read LINE
            do
                # Obviously months already gone this year are for next year
                if [ $MONTH -lt $(date +'%m') ]; then
                    YEAR=$((YEAR+1))
                fi
            echo "$YEAR-$MONTH-$DAY $LINE" >> $TMP_FILE
            YEAR=$(date +'%Y')
        done
    done
    # Sort by date
    sort -n $TMP_FILE
    ;;
esac
