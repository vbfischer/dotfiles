{"mode":"editor","version":1,"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/bryce/Code/git-origin","buffers":[{"text":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"><%@page\n\tlanguage=\"java\" contentType=\"text/html; charset=ISO-8859-1\"\n\tpageEncoding=\"ISO-8859-1\"%>\n<%@taglib uri=\"http://struts.apache.org/tags-html\" prefix=\"html\"%>\n<%@taglib uri=\"http://struts.apache.org/tags-bean\" prefix=\"bean\"%>\n<%@taglib uri=\"http://struts.apache.org/tags-logic\" prefix=\"logic\"%>\n<jsp:useBean id=\"user_session_object\" scope=\"session\"\n\tclass=\"com.fis.cashlineapp.forms.CashLineForm\"></jsp:useBean>\n<jsp:useBean id=\"welcomeForm\" scope=\"request\"\n\tclass=\"com.fis.cashlineapp.forms.WelcomeForm\" />\n<jsp:useBean id=\"welcomeHelper\" scope=\"session\"\n\tclass=\"com.fis.cashlineapp.helper.WelcomeHelper\" />\n\n<html:html>\n<head>\n<title><bean:message key=\"welcome.title3\" /></title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<link href=\"stylesheets/logon.css\" rel=\"stylesheet\" type=\"text/css\">\n<link href=\"stylesheets/NavModel.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body class=\"screen_bkg\">\n<SCRIPT language=JavaScript src=\"scripts/common.js\" type=text/javascript></SCRIPT>\n<jsp:include page=\"/common/Agreement.jsp\"></jsp:include>\n<html:form action=\"welcomePage.do\" method=\"POST\">\n\t<table id=\"login_table\">\n\t\t<tr>\n\t\t\t<td style=\"text-align: center\">\n\t\t\t<table class=\"login_component\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td class=\"branding_panel\">\n\t\t\t\t\t<table id=\"branding_table\">\n\t\t\t\t\t\t<tr valign=\"top\">\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t<tr id=\"organization_logo\">\n\t\t\t\t\t\t\t\t\t<td><IMG SRC=\"displayLogo.do?resource=welcome_screen_logo\" /></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>&nbsp;</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td class=\"label_text\"><bean:write name=\"welcomeHelper\"\n\t\t\t\t\t\t\t\t\t\tproperty=\"welcomeScreenLogoText\" /></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"branding_text\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td class=\"workspace\">\n\t\t\t\t\t<table>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<p><span class=\"product_logo_name1\"><bean:message\n\t\t\t\t\t\t\t\tkey=\"welcome.title1\" /></span>&nbsp;<span class=\"product_logo_name\"><bean:message\n\t\t\t\t\t\t\t\tkey=\"welcome.title2\" /></span></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr id=\"body_text3\" class=\"label_text\">\n\t\t\t\t\t\t\t<td><logic:iterate id=\"messages\" name=\"welcomeForm\"\n\t\t\t\t\t\t\t\tproperty=\"welcomeMessages\">\n\t\t\t\t\t\t\t\t<bean:define id=\"messageKey\" name=\"messages\" property=\"key\" />\n\t\t\t\t\t\t\t\t<bean:define id=\"messageValue\" name=\"messages\" property=\"value\" />\n\t\t\t\t\t\t\t\t<h3><bean:write name=\"messageKey\" /></h3>\n\t\t\t\t\t\t\t\t<p><bean:write name=\"messageValue\" /></p>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t</logic:iterate></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td id=\"message_spacer\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr id=\"body_text3\" class=\"label_text\">\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<p><bean:message key=\"welcomePage.message\" /></p>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td id=\"message_spacer\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td id=\"logon_spacer_3\"></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</table>\n\t\t\t\t\t<table id=\"logon_htmlbody\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td><a href=\"javascript:showPopUp('dialog');\"\n\t\t\t\t\t\t\t\tstyle=\"font-size: 12px; color: #3888d8;\"><bean:message\n\t\t\t\t\t\t\t\tkey=\"welcomePage.enroll\" /></a><span style=\"width: 15px\"></span><a\n\t\t\t\t\t\t\t\thref=\"loginPage.do\" style=\"font-size: 12px; color: #3888d8;\"><bean:message\n\t\t\t\t\t\t\t\tkey=\"welcomePage.login\" /></a><span style=\"width: 15px\"></span></td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td id=\"logon_spacer_1\">\n\t\t\t\t\t\t\t<hr class=\"horizontal_divider_1\" />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td id=\"logon_spacer_1\"></td>\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t<tr id=\"body_text3\" class=\"label_text\">\n\t\t\t\t\t\t\t<td><logic:iterate id=\"disclosures\" name=\"welcomeForm\"\n\t\t\t\t\t\t\t\tproperty=\"disclosures\">\n\t\t\t\t\t\t\t\t<bean:define id=\"messageKey\" name=\"disclosures\" property=\"key\" />\n\t\t\t\t\t\t\t\t<bean:define id=\"messageValue\" name=\"disclosures\"\n\t\t\t\t\t\t\t\t\tproperty=\"value\" />\n\t\t\t\t\t\t\t\t<p class=\"legal_text\"><bean:write name=\"messageValue\" /></p>\n\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t</logic:iterate></td>\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t</table>\n\t\t\t\t\t<p class=\"legal_text\"><bean:message key=\"application.name\" /><bean:message\n\t\t\t\t\t\tkey=\"application.version\" /></p>\n\t\t\t\t\t<p id=\"legal_text\" class=\"legal_text\"><bean:message\n\t\t\t\t\t\tkey=\"application.copyright\" /></p>\n\t\t\t\t\t<p class=\"footer_security_logo\"></p>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n</html:form>\n</body>\n</html:html>","markers":{"markers":{"1":{"id":1,"range":[[22,37],[22,40]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":49,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/welcome/welcome-body.jsp","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0aac96df641f40ac84ade4fa8e03a89a05e17584","deserializer":"TextBuffer"},{"text":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"><%@page\n\tlanguage=\"java\" contentType=\"text/html; charset=ISO-8859-1\"\n\tpageEncoding=\"ISO-8859-1\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-bean\" prefix=\"bean\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-html\" prefix=\"html\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-logic\" prefix=\"logic\"%>\n<jsp:useBean id=\"user_session_object\" scope=\"session\"\n\tclass=\"com.fis.cashlineapp.forms.CashLineForm\"></jsp:useBean>\n<bean:define id=\"userObj\" name=\"user_session_object\" scope=\"session\"\n\ttype=\"com.fis.cashlineapp.forms.CashLineForm\" />\n<jsp:useBean id=\"enrollHelper\" scope=\"session\"\n\tclass=\"com.fis.cashlineapp.helper.EnrollHelper\" />\n<jsp:useBean id=\"welcomeHelper\" scope=\"session\"\n\tclass=\"com.fis.cashlineapp.helper.WelcomeHelper\" />\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<link href=\"stylesheets/NavModel.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n<script language=\"JavaScript\" type=\"text/javascript\">\nfunction logout() {\n    if (window.confirm(\"Are you sure you want to logout ?\"))\n    {\n        parent.location.href = 'logoutPerform.do';\n    }\n}\n</script>\n<%@include file=\"../sessionTimeOut.jsp\"%>\n<table class=\"banner_nav\">\n\t<tr>\n\t\t<td><IMG SRC=\"displayLogo.do?resource=enroll_screen_logo\" /></td>\n\t\t<td class=\"banner_nav_branding_image\">&nbsp;</td>\n\t\t<td width=\"4%\" align=\"center\"><logic:present name=\"userObj\"\n\t\t\tproperty=\"sessionID\">\n\t\t\t<a href=\"javascript:logout()\" class=\"secondary_link_1\"><bean:message\n\t\t\t\tkey=\"header.logout\" /></a>\n\n\t\t</logic:present> <logic:notPresent name=\"userObj\" property=\"sessionID\">\n\t\t\t<a href='<bean:write name=\"welcomeHelper\" property=\"homeURL\"/>'\n\t\t\t\tclass=\"secondary_link_1\"><bean:message key=\"header.home\" /> </a>\n\t\t</logic:notPresent></td>\n\t</tr>\n</table>\n<table>\n\t<tr>\n\t\t<td>&nbsp;</td>\n\t</tr>\n\t<tr>\n\t\t<td class=\"label_text\"><bean:write name=\"enrollHelper\"\n\t\t\tproperty=\"enrollScreenLogoText\" /></td>\n\t</tr>\n</table>\n</body>\n</html>","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":71},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/header.jsp","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9679e37e1c586051ae92d83fcced710e19b93735","deserializer":"TextBuffer"},{"text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts-config PUBLIC \"-//Apache Software Foundation//DTD Struts Configuration 1.2//EN\" \"http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd\">\n<struts-config>\n\n\n\t<!-- Data Sources -->\n\t<data-sources></data-sources>\n\n\t<!-- Form Beans -->\n\t<form-beans>\n\n\t\t<form-bean name=\"eConnectRequestForm\"\n\t\t\ttype=\"com.fis.cashlineapp.forms.SCIClientRequestForm\" />\n\n\t\t<form-bean name=\"welcomeForm\" type=\"com.fis.cashlineapp.forms.WelcomeForm\">\n\t\t</form-bean>\n\n\t\t<form-bean name=\"loginForm\" type=\"com.fis.cashlineapp.forms.LoginForm\" />\n\n\t\t<form-bean name=\"CashLineForm\" type=\"com.fis.cashlineapp.forms.CashLineForm\" />\n\n\t\t<form-bean name=\"changePasswordForm\"\n\t\t\ttype=\"com.fis.cashlineapp.forms.ChangePasswordForm\" />\n\n\t\t<form-bean name=\"enrollForm\" type=\"com.fis.cashlineapp.forms.EnrollForm\" />\n\n\t</form-beans>\n\n\t<!-- Global Exceptions -->\n\t<global-exceptions></global-exceptions>\n\n\n\t<!-- Global Forwards -->\n\t<global-forwards>\n\t\t<forward name=\"logout\" redirect=\"false\" path=\"/logoutPerform.do\" />\n\t\t<forward name=\"login\" path=\"/loginPage.do\" />\n\t\t<forward name=\"welcome\" path=\"/welcomePage.do\"></forward>\n\t\t<forward name=\"error\" path=\"common/error-form.jsp\" />\n\t</global-forwards>\n\n\t<!-- Action Mappings -->\n\n\t<action-mappings>\n\n\t\t<!--\t\tStart Login module\t\t-->\n\t\t<action path=\"/loginPage\" type=\"org.apache.struts.actions.ForwardAction\"\n\t\t\tparameter=\"login/login-form.jsp\" />\n\t\t<action path=\"/welcomePage\" type=\"com.fis.cashlineapp.actions.WelcomeAction\"\n\t\t\tname=\"welcomeForm\">\n\t\t\t<forward name=\"success\" path=\"welcome/welcome-body.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"common/error-form.jsp\" />\n\t\t</action>\n\t\t<action path=\"/logoutPerform\" type=\"com.fis.cashlineapp.actions.LogoutAction\"\n\t\t\tvalidate=\"true\">\n\t\t\t<forward name=\"success\" path=\"login/login-form.jsp\" />\n\t\t</action>\n\t\t<action path=\"/loginPerform\" type=\"com.fis.cashlineapp.actions.LoginAction\"\n\t\t\tname=\"loginForm\" validate=\"true\" parameter=\"method\" scope=\"request\"\n\t\t\tinput=\"login/login-form.jsp\">\n\t\t\t<forward name=\"success\" path=\"/enrollDisplay.do?method=Load\" />\n\t\t\t<forward name=\"forcePasswordChange\" path=\"/loginPwordChange.do\" />\n\t\t\t<forward name=\"fail\" path=\"common/error-form.jsp\" />\n\t\t</action>\n\t\t<action path=\"/loginPwordChange\" type=\"com.fis.cashlineapp.actions.LoginAction\"\n\t\t\tname=\"changePasswordForm\" parameter=\"method\" scope=\"request\"\n\t\t\tinput=\"login/login-pword-change.jsp\" validate=\"false\">\n\t\t\t<forward name=\"success\" path=\"login/login-pword-change.jsp\" />\n\t\t</action>\n\t\t<action path=\"/changePasswordLoginPerform\" type=\"com.fis.cashlineapp.actions.LoginAction\"\n\t\t\tname=\"changePasswordForm\" validate=\"true\" parameter=\"method\" scope=\"request\"\n\t\t\tinput=\"login/login-pword-change.jsp\">\n\t\t\t<forward name=\"success\" path=\"login/login-form.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"login/login-pword-change.jsp\" />\n\t\t</action>\n\t\t<action path=\"/enrollDisplay\" type=\"com.fis.cashlineapp.actions.EnrollAction\"\n\t\t\tname=\"enrollForm\" scope=\"request\" parameter=\"method\" input=\"enroll/enroll-form.jsp\"\n\t\t\tvalidate=\"false\">\n\t\t\t<forward name=\"success\" path=\"enroll/enroll-form.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"common/error-form.jsp\" />\n\t\t</action>\n\t\t<action path=\"/enrollPerform\" type=\"com.fis.cashlineapp.actions.EnrollAction\"\n\t\t\tname=\"enrollForm\" scope=\"request\" parameter=\"method\" validate=\"true\"\n\t\t\tinput=\"enroll/enroll-form.jsp\">\n\t\t\t<forward name=\"success\" path=\"common/success-form.jsp\" />\n\t\t\t<forward name=\"enroll\" path=\"enroll/enroll-form.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"common/failure-form.jsp\" />\n\t\t</action>\n\n\t\t<action path=\"/enrollEdit\" type=\"com.fis.cashlineapp.actions.EnrollAction\"\n\t\t\tname=\"enrollForm\" scope=\"request\" parameter=\"method\" validate=\"false\"\n\t\t\tinput=\"enroll/enroll-form.jsp\">\n\t\t\t<forward name=\"enroll\" path=\"enroll/enroll-form.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"enroll/enroll-form.jsp\" />\n\t\t</action>\n\n\t\t<action path=\"/enrollSave\" type=\"com.fis.cashlineapp.actions.EnrollAction\"\n\t\t\tname=\"enrollForm\" scope=\"request\" parameter=\"method\" validate=\"false\"\n\t\t\tinput=\"enroll/enroll-form.jsp\">\n\t\t\t<forward name=\"success\" path=\"common/success-form.jsp\" />\n\t\t\t<forward name=\"enroll\" path=\"enroll/enroll-form.jsp\" />\n\t\t</action>\n\n\t\t<action path=\"/displayLogo\" type=\"com.fis.cashlineapp.actions.DisplayImageAction\">\n\t\t\t<forward name=\"success\" path=\"enroll/enroll-form.jsp\" />\n\t\t\t<forward name=\"fail\" path=\"common/failure-form.jsp\" />\n\t\t</action>\n\n\n\t\t<action path=\"/logout\" type=\"com.fis.cashlineapp.actions.LogoutAction\">\n\t\t</action>\n\n\t\t<!--\t\tEnd Login Module\t\t-->\n\n\t\t<action path=\"/errorDisplay\" type=\"com.fis.cashlineapp.actions.ErrorAction\">\n\t\t\t<forward name=\"success\" path=\"common/error-form.jsp\"></forward>\n\t\t</action>\n\n\t</action-mappings>\n\n\t<!-- Message Resources -->\n\t<message-resources parameter=\"com.fis.cashlineapp.resources.ApplicationResources\" />\n\n\t<plug-in className=\"org.apache.struts.validator.ValidatorPlugIn\">\n\t\t<set-property property=\"pathnames\"\n\t\t\tvalue=\"/org/apache/struts/validator/validator-rules-compressed.xml,/WEB-INF/validator/validation.xml,/WEB-INF/validator/validation-validwhen.xml\" />\n\t</plug-in>\n\t<plug-in className=\"org.apache.struts.tiles.TilesPlugin\">\n\t\t<set-property property=\"definitions-config\" value=\"/WEB-INF/tiles-definitions.xml\" />\n\t</plug-in>\n\n</struts-config>\n","markers":{"markers":{"1":{"id":1,"range":[[57,19],[57,19]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":82,"goalBufferRange":null,"autoscroll":false},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/WEB-INF/struts-config.xml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"af2b789766a11b677387d81e6664a86b5f8a2458","deserializer":"TextBuffer"},{"text":"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"><%@page\n\tlanguage=\"java\" contentType=\"text/html; charset=ISO-8859-1\"\n\tpageEncoding=\"ISO-8859-1\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-bean\" prefix=\"bean\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-html\" prefix=\"html\"%>\n<%@ taglib uri=\"http://struts.apache.org/tags-logic\" prefix=\"logic\"%>\n<html>\n<head>\n<title>CashLine Agreement</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<link href=\"stylesheets/FISReset.css\" rel=\"stylesheet\" type=\"text/css\">\n<link href=\"stylesheets/NavModel.css\" rel=\"stylesheet\" type=\"text/css\">\n<SCRIPT language=JavaScript src=\"scripts/common.js\" type=text/javascript></SCRIPT>\n</head>\n<body>\n<div id=\"cover\"></div>\n<div id=\"dialog\"><html:form action=\"/enrollDisplay\" method=\"post\">\n\t<logic:present name=\"SV_NPI_AGREEMENT\" scope=\"session\">\n\t\t<bean:define id=\"SV_NPI_AGREEMENT\" name=\"SV_NPI_AGREEMENT\"\n\t\t\tscope=\"session\" />\n\t</logic:present>\n\t<table align=\"center\">\n\t\t<tr>\n\t\t\t<td align=\"center\">\n\t\t\t<h1>Conditions and Terms of Use</h1>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"form_table_row\">\n\t\t\t<td colspan=\"4\">\n\t\t\t<br>\n\t\t\t1. ACCEPTANCE OF TERMS Certegy� provides the Certegy� services\n\t\t\t(defined below) to you subject to the following Terms of Service\n\t\t\t(\"TOS\"), which may be updated by us from time to time without notice\n\t\t\tto you. By accessing and using the Certegy� services, you accept and\n\t\t\tagree to be bound by the terms and provision of the TOS. In addition,\n\t\t\twhen using particular Certegy� owned or operated services, you and\n\t\t\tCertegy� shall be subject to any posted guidelines or rules\n\t\t\tapplicable to such services, which may be posted and modified from\n\t\t\ttime to time. <br><br>\n\t\t\t2. SERVICE DESCRIPTION <br>\n\t\t\tAt Certegy�, we are proud to offer innovative check-cashing solutions\n\t\t\tfor gaming establishments. With online enrollment in Certegy�\n\t\t\tCashLine, you will have access to a personal10-day revolving CashLine\n\t\t\tlimit tied directly to your checking account. Your CashLine limit\n\t\t\twill be available to you at all gaming establishments that\n\t\t\tparticipate in the Certegy� Network. After your initial enrollment,\n\t\t\tyou will no longer need to present a check to access funds from your\n\t\t\tchecking account. Simply present your driver's license to the cashier\n\t\t\tand the requested amount will be deducted from your 10-day CashLine\n\t\t\tlimit. <br><br>\n\t\t\t3. YOUR REGISTRATION OBLIGATIONS <br>\n\t\t\tIn consideration of your use of the Certegy� Services, you represent\n\t\t\tthat you are of legal age to form a binding contract and are not a\n\t\t\tperson barred from receiving the Certegy� services under the laws of\n\t\t\tthe United States or other applicable jurisdiction. You also agree\n\t\t\tto: (a) provide true, accurate, current and complete information\n\t\t\tabout yourself as prompted by the Certegy� service's registration\n\t\t\tform (the \"Registration Data\") and (b) maintain and promptly update\n\t\t\tthe Registration Data to keep it true, accurate, current and\n\t\t\tcomplete. If you provide any information that is untrue, inaccurate,\n\t\t\tnot current or incomplete, or Certegy� has reasonable grounds to\n\t\t\tsuspect that such information is untrue, inaccurate, not current or\n\t\t\tincomplete, Certegy� has the right to suspend or terminate your\n\t\t\taccount and refuse any and all current or future use of the Certegy�\n\t\t\tservices (or any portion thereof). Certegy� is concerned about the\n\t\t\tsafety and privacy of all its users. When you create an account, you\n\t\t\tcertify that you are at least 18 years old. <br><br>\n\t\t\t4. CERTEGY� PRIVACY POLICY <br>\n\t\t\tRegistration Data and certain other information about you are subject\n\t\t\tto our applicable privacy policy. You understand that through your \n\t\t\tuse of Certegy� services you consent to the collection and use (as \n\t\t\tset forth in the applicable privacy policy) of this information, \n\t\t\tincluding the transfer of this information to the United States and/or\n\t\t\tother countries for storage, processing and use by Certegy� and its \n\t\t\taffiliates. <br><br>\n\t\t\t5. MEMBER ACCOUNT, PASSWORD AND SECURITY <br>\n\t\t\tYou will receive a password and account designation upon completing\n\t\t\tthe Certegy� services registration process. You are responsible for\n\t\t\tmaintaining the confidentiality of the password and account and are\n\t\t\tfully responsible for all activities that occur under your password\n\t\t\tor account. You agree to (a) immediately notify Certegy� of any\n\t\t\tunauthorized use of your password or account or any other breach of\n\t\t\tsecurity, and (b) ensure that you exit from your account at the end\n\t\t\tof each session. Certegy� cannot and will not be liable for any loss\n\t\t\tor damage arising from your failure to comply with this Section 5. <br><br>\n\t\t\t6. COPYRIGHT NOTICES <br>\n\t\t\tThe works of authorship contained in the Certegy�.com Website (the\n\t\t\t\"Website\"), including but not limited to all design, text, sound\n\t\t\trecordings and images, are owned, except as otherwise expressly\n\t\t\tstated, by Certegy� or one of its subsidiaries, (\"Certegy�\"). Except\n\t\t\tas otherwise expressly stated herein, they may not be copied,\n\t\t\ttransmitted, displayed, performed, distributed (for compensation or\n\t\t\totherwise), licensed, altered, framed, stored for subsequent use or\n\t\t\totherwise used in whole or in part in any manner without Certegy�'s\n\t\t\tprior written consent, except to the extent permitted by the\n\t\t\tCopyright Act of 1976 (17 U.S.C. � 107), as amended, and then, only\n\t\t\twith notices of Certegy�'s proprietary rights provided that you may\n\t\t\tdownload information and print out hard copies for your personal use,\n\t\t\tso long as you do not remove any copyright or other notice as may be\n\t\t\tcontained in information, as downloaded. <br><br>\n\t\t\t7. TRADEMARK NOTICES <br>\n\t\t\tCertegy� CashLine is the marketing name for the financial services\n\t\t\tactivities of Certegy� and its subsidiaries and affiliates in the\n\t\t\tUnited States. \"Certegy�,\" the Certegy� logo is a trademark of\n\t\t\tCertegy�. Other featured words or symbols, used to identify the source\n\t\t\tof goods and services, may be the trademarks of their respective\n\t\t\towners. <br><br>\n\t\t\t8. POTENTIAL DISRUPTION OF SERVICE <br>\n\t\t\tAccess to the Website may from time to time be unavailable, delayed,\n\t\t\tlimited or slowed due to, among other things:\n\t\t\t<ol >\n\t\t\t\t<li>* hardware failure, including among other things failures of\n\t\t\t\tcomputers (including your own computer), servers, networks,\n\t\t\t\ttelecommunication lines and connections, and other electronic and\n\t\t\t\tmechanical equipment;</li>\n\t\t\t\t<li>* software failure, including among other things, bugs,\n\t\t\t\terrors, viruses, configuration problems, incompatibility of systems,\n\t\t\t\tutilities or applications, the operation of firewalls or screening\n\t\t\t\tprograms, unreadable codes, or irregularities within particular\n\t\t\t\tdocuments or other content;</li>\n\t\t\t\t<li>* overload of system capacities;</li>\n\t\t\t\t<li>* damage caused by severe weather, earthquakes, wars,\n\t\t\t\tinsurrection, riots, civil commotion, act of God, accident, fire,\n\t\t\t\twater damage, explosion, mechanical breakdown or natural disasters;</li>\n\t\t\t\t<li>* interruption (whether partial or total) of power supplies\n\t\t\t\tor other utility of service;</li>\n\t\t\t\t<li>* strike or other stoppage (whether partial or total) of\n\t\t\t\tlabor;</li>\n\t\t\t\t<li>* governmental or regulatory restrictions, exchange rulings,\n\t\t\t\tcourt or tribunal orders or other human intervention; or</li>\n\t\t\t\t<li>* any other cause (whether similar or dissimilar to any of\n\t\t\t\tthe foregoing) whatsoever beyond the control of Certegy�.</li>\n\t\t\t</ol>\n\t\t\t<br>\n\t\t\t9. NO COMMERCIAL REUSE OF CERTEGY� SERVICES <br>\n\t\t\tYou agree not to reproduce, duplicate, copy, sell, trade, resell or\n\t\t\texploit for any commercial purposes, any portion or use of, or access\n\t\t\tto, the Certegy� services (including Content, Advertisements, Software\n\t\t\tand your Certegy� ID). <br><br>\n\t\t\t10. MODIFICATIONS TO CERTEGY� SERVICES <br>\n\t\t\tCertegy� reserves the right at any time and from time to time to\n\t\t\tmodify or discontinue, temporarily or permanently, the Certegy�\n\t\t\tservices (or any part thereof) with or without notice. You agree that\n\t\t\tCertegy� shall not be liable to you or to any third party for any\n\t\t\tmodification, suspension or discontinuance of the Certegy� services\n\t\t\t(or any part thereof). <br><br>\n\t\t\t11. TERMINATION <br>\n\t\t\tYou may terminate your Certegy� account, and access to the Certegy�\n\t\t\tservices by submitting such termination request to Certegy�. Our\n\t\t\tcontact information is provided below in order to perform a\n\t\t\ttermination request: Certegy Check Services, Inc. P.O. Box 30296\n\t\t\tTampa, FL 33630-3296, 1-866-543-6315. You agree that Certegy� may,\n\t\t\twithout prior notice, immediately terminate, limit your access to or\n\t\t\tsuspend your Certegy� account and access to the Certegy� Services.\n\t\t\tCause for such termination, limitation of access or suspension shall\n\t\t\tinclude, but not be limited to, (a) breaches or violations of the TOS\n\t\t\tor other incorporated agreements or guidelines, (b) requests by law\n\t\t\tenforcement or other government agencies, (c) discontinuance or\n\t\t\tmaterial modification to the Certegy� services (or any part thereof),\n\t\t\t(d) unexpected technical or security issues or problems, (e) extended\n\t\t\tperiods of inactivity, (f) engagement by you in fraudulent or illegal\n\t\t\tactivities, and/or (g) nonpayment of any fees owed by you in\n\t\t\tconnection with the Certegy� Services. Further, you agree that all\n\t\t\tterminations, limitations of access and suspensions for cause shall\n\t\t\tbe made in Certegy�'s sole discretion and that Certegy� shall not be\n\t\t\tliable to you or any third party for any termination of your account\n\t\t\tor access to the Certegy� Services. Termination of your Certegy�\n\t\t\taccount includes any or all of the following: (a) removal of access\n\t\t\tto all or part of the offerings within the Certegy� services, (b)\n\t\t\tdeletion of your password and all related information, files and\n\t\t\tcontent associated with or inside your account (or any part thereof),\n\t\t\tand (c) barring of further use of all or part of the Certegy�\n\t\t\tservices. <br><br>\n\t\t\t12. LINKS <br>\n\t\t\tThe Certegy� services may provide, or third parties may provide,\n\t\t\tlinks to other World Wide Web sites or resources. You acknowledge and\n\t\t\tagree that Certegy� is not responsible for the availability of such\n\t\t\texternal sites or resources, and does not endorse and is not\n\t\t\tresponsible or liable for any Content, advertising, products or other\n\t\t\tmaterials on or available from such sites or resources. You further\n\t\t\tacknowledge and agree that Certegy� shall not be responsible or\n\t\t\tliable, directly or indirectly, for any damage or loss caused or\n\t\t\talleged to be caused by or in connection with use of or reliance on\n\t\t\tany such Content, goods or services available on or through any such\n\t\t\tsite or resource. <br><br>\n\t\t\t13. LIMITATION OF LIABILITY <br>\n\t\t\tYOU EXPRESSLY UNDERSTAND AND AGREE THAT CERTEGY� AND ITS\n\t\t\tSUBSIDIARIES, AFFILIATES, OFFICERS, EMPLOYEES, AGENTS, PARTNERS AND\n\t\t\tLICENSORS SHALL NOT BE LIABLE TO YOU FOR ANY PUNITIVE, INDIRECT,\n\t\t\tINCIDENTAL, SPECIAL, CONSEQUENTIAL OR EXEMPLARY DAMAGES, INCLUDING,\n\t\t\tBUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS, GOODWILL, USE, DATA\n\t\t\tOR OTHER INTANGIBLE LOSSES (EVEN IF CERTEGY� HAS BEEN ADVISED OF THE\n\t\t\tPOSSIBILITY OF SUCH DAMAGES), RESULTING FROM: (a) THE USE OR THE\n\t\t\tINABILITY TO USE THE CERTEGY� SERVICE; (b) THE COST OF PROCUREMENT OF\n\t\t\tSUBSTITUTE GOODS AND SERVICES; (c) UNAUTHORIZED ACCESS TO OR\n\t\t\tALTERATION OF YOUR TRANSMISSIONS OR DATA; (d) STATEMENTS OR CONDUCT\n\t\t\tOF ANY THIRD PARTY ON THE CERTEGY� SERVICE; OR (e) ANY OTHER MATTER\n\t\t\tRELATING TO THE CERTEGY� SERVICE. <br><br>\n\t\t\t14. NOTICE <br>\n\t\t\tCertegy� may provide you with notices, including those regarding\n\t\t\tchanges to the TOS, including by but not limited to email, regular\n\t\t\tmail, SMS, MMS, text message, postings on the Certegy� services, or\n\t\t\tother reasonable means now known or hereafter developed. Such notices\n\t\t\tmay not be received if you violate this TOS by accessing the Certegy�\n\t\t\tservices in an unauthorized manner. Your agreement to this TOS\n\t\t\tconstitutes your agreement that you are deemed to have received any\n\t\t\tand all notices that would have been delivered had you accessed the\n\t\t\tCertegy� services in an authorized manner.\n\t\t\t<br><br>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"form_table_row\">\n\t\t\t<td colspan=\"4\">I Agree <html:checkbox\n\t\t\t\tproperty=\"npiConsumerAcceptance\" onclick=\"agree(this.checked);\"></html:checkbox>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class=\"form_table_row\">\n\t\t\t<td>\n\t\t\t<div id=\"continueButton\"\n\t\t\t\tstyle=\"margin-top: 22px; margin-bottom: 7px;\"><html:submit\n\t\t\t\tstyleClass=\"primary_button\" property=\"method\" value=\"Continue\"\n\t\t\t\tdisabled=\"true\" onclick=\"submitAgreement(); return false;\"></html:submit><span>\n\t\t\t</span><html:cancel styleClass=\"primary_button\" property=\"method\"\n\t\t\t\tonclick=\"closePopUp('dialog'); return false;\"></html:cancel></div>\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</html:form></div>\n</body>\n</html>","markers":{"markers":{"1":{"id":1,"range":[[220,42],[220,48]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":98,"autoscroll":true,"goalBufferRange":null},"deserializer":"Marker"},"98":{"id":98,"range":[[30,0],[30,65]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"99":{"id":99,"range":[[33,0],[33,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"100":{"id":100,"range":[[35,0],[36,62]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"101":{"id":101,"range":[[40,0],[41,64]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"102":{"id":102,"range":[[45,0],[45,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"103":{"id":103,"range":[[51,0],[51,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"104":{"id":104,"range":[[53,0],[53,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"105":{"id":105,"range":[[56,0],[56,68]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"106":{"id":106,"range":[[60,0],[60,67]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"107":{"id":107,"range":[[62,0],[64,69]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"108":{"id":108,"range":[[67,0],[67,34]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"109":{"id":109,"range":[[70,0],[70,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"110":{"id":110,"range":[[73,0],[73,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"111":{"id":111,"range":[[77,0],[77,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"112":{"id":112,"range":[[80,0],[80,66]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"113":{"id":113,"range":[[83,0],[83,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"114":{"id":114,"range":[[86,0],[86,69]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"115":{"id":115,"range":[[89,0],[89,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"116":{"id":116,"range":[[93,0],[93,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"117":{"id":117,"range":[[95,0],[96,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"118":{"id":118,"range":[[101,0],[104,73]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"119":{"id":119,"range":[[131,0],[131,66]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"120":{"id":120,"range":[[134,0],[134,51]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"121":{"id":121,"range":[[137,0],[141,66]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"122":{"id":122,"range":[[143,0],[144,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"123":{"id":123,"range":[[147,0],[148,67]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"124":{"id":124,"range":[[151,0],[151,69]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"125":{"id":125,"range":[[153,0],[153,69]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"126":{"id":126,"range":[[158,0],[158,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"127":{"id":127,"range":[[162,0],[162,69]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"128":{"id":128,"range":[[164,0],[164,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"129":{"id":129,"range":[[166,0],[166,67]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"130":{"id":130,"range":[[168,0],[168,68]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"131":{"id":131,"range":[[171,0],[171,64]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"132":{"id":132,"range":[[174,0],[174,67]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"133":{"id":133,"range":[[176,0],[176,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"134":{"id":134,"range":[[180,0],[180,66]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"135":{"id":135,"range":[[186,0],[186,59]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"136":{"id":136,"range":[[191,0],[191,71]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"137":{"id":137,"range":[[193,0],[193,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"138":{"id":138,"range":[[196,0],[197,45]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"139":{"id":139,"range":[[199,0],[199,67]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"140":{"id":140,"range":[[201,0],[201,70]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"141":{"id":141,"range":[[203,0],[203,72]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"142":{"id":142,"range":[[207,0],[207,45]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/Agreement.jsp","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"87de1166a3a75dfcef8fee25243bbef57acc7d6d","deserializer":"TextBuffer"},{"text":"package com.fis.cashlineapp.actions;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.StringTokenizer;\nimport java.util.TimeZone;\nimport java.util.regex.Pattern;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.servlet.http.HttpSession;\n\nimport org.apache.commons.validator.GenericValidator;\nimport org.apache.log4j.Logger;\nimport org.apache.struts.action.ActionErrors;\nimport org.apache.struts.action.ActionForm;\nimport org.apache.struts.action.ActionForward;\nimport org.apache.struts.action.ActionMapping;\nimport org.apache.struts.action.ActionMessage;\nimport org.apache.struts.util.MessageResources;\n\nimport com.fis.cashline.businessdelegate.EnrollBusinessDelegate;\nimport com.fis.cashline.transferobject.ConsumerOtbTO;\nimport com.fis.cashline.transferobject.ConsumerTO;\nimport com.fis.cashline.transferobject.EnrollTO;\nimport com.fis.cashline.transferobject.TxlogTO;\nimport com.fis.cashlineapp.econnect.SCIClientCall;\nimport com.fis.cashlineapp.forms.CashLineForm;\nimport com.fis.cashlineapp.forms.EnrollForm;\nimport com.fis.cashlineapp.forms.SCIClientRequestForm;\nimport com.fis.cashlineapp.forms.SCIClientResponseForm;\nimport com.fis.cashlineapp.helper.EnrollHelper;\nimport com.fis.cashlineapp.helper.MerchantPresentationHelper;\nimport com.fis.cashlineapp.util.ApplicationConstants;\nimport com.fis.cashlineapp.util.MerchantAppValidator;\nimport com.fis.cashlineapp.util.SCIApplicationConstants;\nimport com.fis.gaming.core.exception.CheckServicesException;\n\npublic class EnrollAction extends org.apache.struts.actions.DispatchAction {\n\tpublic static final Logger log = Logger.getLogger(\"EnrollAction\");\n\n\tpublic ActionForward Load(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.info(\"Entering Load\");\n\t\tActionErrors errors = new ActionErrors();\n\t\tActionForward forward = new ActionForward();\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\t\tHttpSession session = request.getSession(true);\n\t\tCashLineForm sessionFormBean = (CashLineForm) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT);\n\t\tEnrollHelper enrollHelper = (EnrollHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_ENROLL_HELPER);\n\t\ttry {\n\n\t\t\tif (sessionFormBean != null\n\t\t\t\t\t&& sessionFormBean.getConsumer() != null) {\n\t\t\t\tenrollForm.setEnrollForm(sessionFormBean.getConsumer());\n\t\t\t\trequest.setAttribute(\"enrollForm\", enrollForm);\n\t\t\t}\n\n\t\t\tif (enrollHelper == null) {\n\t\t\t\tenrollHelper = populateEnrollHelper(new EnrollHelper(), session);\n\t\t\t}\n\n\t\t\tenrollForm.setAchAgreement(enrollHelper.getAchAgreement());\n\t\t\tenrollForm.setCashLineAgreement(enrollHelper.getOtbAgreement());\n\n\t\t} catch (Exception e) {\n\t\t\t// add errors\n\t\t\terrors.add(\"name\", new ActionMessage(\"id\"));\n\t\t\tlog.error(\" EnrollAction Error: \" + e);\n\t\t}\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t\tforward = mapping.findForward(\"fail\");\n\t\t} else {\n\t\t\tforward = mapping.findForward(\"success\");\n\t\t}\n\t\treturn forward;\n\t}\n\n\tprivate ActionErrors customValidateSave(MessageResources messageResources,\n\t\t\tEnrollForm enrollForm) {\n\t\tActionErrors errors = new ActionErrors();\n\t\tif (enrollForm != null) {\n\t\t\tif (enrollForm.getUserName() == null\n\t\t\t\t\t|| enrollForm.getUserName().trim().length() == 0) {\n\t\t\t\terrors.add(\"userName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.userID\")));\n\t\t\t}\n\t\t\tif (enrollForm.getPassword() == null\n\t\t\t\t\t|| enrollForm.getPassword().trim().length() == 0) {\n\t\t\t\terrors.add(\"password\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.password\")));\n\t\t\t}\n\t\t\tif (enrollForm.getConfirmPassword() == null\n\t\t\t\t\t|| enrollForm.getConfirmPassword().trim().length() == 0) {\n\t\t\t\terrors.add(\"confirmPassword\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.confirmPassword\")));\n\t\t\t} else if (enrollForm.getConfirmPassword() != null\n\t\t\t\t\t&& enrollForm.getPassword() != null\n\t\t\t\t\t&& !enrollForm.getConfirmPassword().equals(\n\t\t\t\t\t\t\tenrollForm.getPassword())) {\n\t\t\t\terrors.add(\"confirmPassword\", new ActionMessage(\n\t\t\t\t\t\t\"error.equalsField\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.confirmPassword\"),\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.password\")));\n\t\t\t} else if (enrollForm.getConfirmPassword() != null\n\t\t\t\t\t&& enrollForm.getPassword() != null\n\t\t\t\t\t&& enrollForm.getConfirmPassword().equals(\n\t\t\t\t\t\t\tenrollForm.getPassword())) {\n\t\t\t\tif (!validatePassword(enrollForm.getConfirmPassword())) {\n\t\t\t\t\terrors.add(\"password\", new ActionMessage(\n\t\t\t\t\t\t\t\"error.password.invalid\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (enrollForm.getFirstName() == null\n\t\t\t\t\t|| enrollForm.getFirstName().trim().length() == 0) {\n\t\t\t\terrors.add(\"firstName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.firstName\")));\n\t\t\t}\n\t\t\tif (enrollForm.getLastName() == null\n\t\t\t\t\t|| enrollForm.getLastName().trim().length() == 0) {\n\t\t\t\terrors.add(\"lastName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.lastName\")));\n\t\t\t}\n\t\t\tif (enrollForm.getPhone() == null\n\t\t\t\t\t|| enrollForm.getPhone().trim().length() == 0) {\n\t\t\t\terrors.add(\"phone\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.dayPhone\")));\n\t\t\t} else if (enrollForm.getPhone() != null\n\t\t\t\t\t&& enrollForm.getPhone().trim().length() > 0) {\n\t\t\t\tif (!validateNumeric(enrollForm.getPhone())) {\n\t\t\t\t\terrors\n\t\t\t\t\t\t\t.add(\"phone\", new ActionMessage(\"errors.numeric\",\n\t\t\t\t\t\t\t\t\tmessageResources\n\t\t\t\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.dayPhone\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tprivate ActionErrors validateLoginInfo(MessageResources messageResources,\n\t\t\tEnrollForm enrollForm) {\n\t\tActionErrors errors = new ActionErrors();\n\t\tif (enrollForm != null) {\n\t\t\tif (enrollForm.getUserName() == null\n\t\t\t\t\t|| enrollForm.getUserName().trim().length() == 0) {\n\t\t\t\terrors.add(\"userName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.userID\")));\n\t\t\t}\n\t\t\tif (enrollForm.getPassword() == null\n\t\t\t\t\t|| enrollForm.getPassword().trim().length() == 0) {\n\t\t\t\terrors.add(\"password\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.password\")));\n\t\t\t}\n\t\t\tif (enrollForm.getConfirmPassword() == null\n\t\t\t\t\t|| enrollForm.getConfirmPassword().trim().length() == 0) {\n\t\t\t\terrors.add(\"confirmPassword\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.confirmPassword\")));\n\t\t\t} else if (enrollForm.getConfirmPassword() != null\n\t\t\t\t\t&& enrollForm.getPassword() != null\n\t\t\t\t\t&& !enrollForm.getConfirmPassword().equals(\n\t\t\t\t\t\t\tenrollForm.getPassword())) {\n\t\t\t\terrors.add(\"confirmPassword\", new ActionMessage(\n\t\t\t\t\t\t\"error.equalsField\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.confirmPassword\"),\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.password\")));\n\t\t\t} else if (enrollForm.getConfirmPassword() != null\n\t\t\t\t\t&& enrollForm.getPassword() != null\n\t\t\t\t\t&& enrollForm.getConfirmPassword().equals(\n\t\t\t\t\t\t\tenrollForm.getPassword())) {\n\t\t\t\tif (!validatePassword(enrollForm.getConfirmPassword())) {\n\t\t\t\t\terrors.add(\"password\", new ActionMessage(\n\t\t\t\t\t\t\t\"error.password.invalid\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (enrollForm.getSecurityQuestion() == null\n\t\t\t\t\t|| enrollForm.getSecurityQuestion().trim().length() == 0) {\n\t\t\t\terrors.add(\"securityQuestion\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.securityQuestion\")));\n\t\t\t}\n\t\t\tif (enrollForm.getSecurityAnswer() == null\n\t\t\t\t\t|| enrollForm.getSecurityAnswer().trim().length() == 0) {\n\t\t\t\terrors.add(\"securityAnswer\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.securityAnswer\")));\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tprivate ActionErrors validatePersonalInfo(\n\t\t\tMessageResources messageResources, EnrollForm enrollForm) {\n\t\tActionErrors errors = new ActionErrors();\n\t\tif (enrollForm != null) {\n\t\t\tif (enrollForm.getFirstName() == null\n\t\t\t\t\t|| enrollForm.getFirstName().trim().length() == 0) {\n\t\t\t\terrors.add(\"firstName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.firstName\")));\n\t\t\t}\n\t\t\tif (enrollForm.getLastName() == null\n\t\t\t\t\t|| enrollForm.getLastName().trim().length() == 0) {\n\t\t\t\terrors.add(\"lastName\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.lastName\")));\n\t\t\t}\n\t\t\tif (enrollForm.getValidateDob() == null\n\t\t\t\t\t|| enrollForm.getValidateDob().trim().length() == 0) {\n\t\t\t\terrors.add(\"validateDob\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.dob\")));\n\t\t\t} else if (!validateDateOfBirth(enrollForm.getValidateDob())) {\n\t\t\t\terrors.add(\"validateDob\", new ActionMessage(\n\t\t\t\t\t\t\"errors.DateOfBirth\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.dob\")));\n\t\t\t}\n\t\t\tif (enrollForm.getDriversLicense() == null\n\t\t\t\t\t|| enrollForm.getDriversLicense().trim().length() == 0) {\n\t\t\t\terrors.add(\"driversLicense\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.USDL\")));\n\t\t\t}\n\t\t\tif (enrollForm.getVerifyDriversLicense() == null\n\t\t\t\t\t|| enrollForm.getVerifyDriversLicense().trim().length() == 0) {\n\t\t\t\terrors.add(\"verifyDriversLicense\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.verifyUSDL\")));\n\t\t\t} else if (enrollForm.getVerifyDriversLicense() != null\n\t\t\t\t\t&& enrollForm.getDriversLicense() != null\n\t\t\t\t\t&& !enrollForm.getVerifyDriversLicense().equals(\n\t\t\t\t\t\t\tenrollForm.getDriversLicense())) {\n\t\t\t\terrors.add(\"verifyDriversLicense\", new ActionMessage(\n\t\t\t\t\t\t\"error.equalsField\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.verifyUSDL\"),\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.USDL\")));\n\t\t\t}\n\t\t\tif (enrollForm.getDlState() == null\n\t\t\t\t\t|| enrollForm.getDlState().trim().length() == 0) {\n\t\t\t\terrors.add(\"dlState\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.stateInsurance\")));\n\t\t\t}\n\t\t\tif (enrollForm.getValidateExpiry() == null\n\t\t\t\t\t|| enrollForm.getValidateExpiry().trim().length() == 0) {\n\t\t\t\terrors.add(\"validateExpiry\", new ActionMessage(\n\t\t\t\t\t\t\"errors.required\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.expiryDate\")));\n\t\t\t} else if (!validateExpiredDate(enrollForm.getValidateExpiry())) {\n\t\t\t\terrors.add(\"validateExpiry\", new ActionMessage(\n\t\t\t\t\t\t\"errors.ExpiredDate\", messageResources\n\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.expiryDate\")));\n\t\t\t}\n\t\t\tif ((enrollForm.getSsn1() != null && enrollForm.getSsn1().trim()\n\t\t\t\t\t.length() != 0)\n\t\t\t\t\t|| (enrollForm.getSsn2() != null && enrollForm.getSsn2()\n\t\t\t\t\t\t\t.trim().length() != 0)) {\n\n\t\t\t\tif (!enrollForm.getSsn2().equals(enrollForm.getSsn1())) {\n\t\t\t\t\terrors\n\t\t\t\t\t\t\t.add(\n\t\t\t\t\t\t\t\t\t\"ssn2\",\n\t\t\t\t\t\t\t\t\tnew ActionMessage(\n\t\t\t\t\t\t\t\t\t\t\t\"error.equalsField\",\n\t\t\t\t\t\t\t\t\t\t\tmessageResources\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.verifySSN\"),\n\t\t\t\t\t\t\t\t\t\t\tmessageResources\n\t\t\t\t\t\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.SSN\")));\n\t\t\t\t} else if (enrollForm.getSsn2() != null\n\t\t\t\t\t\t&& enrollForm.getSsn2().trim().length() != 0\n\t\t\t\t\t\t&& enrollForm.getSsn1() != null\n\t\t\t\t\t\t&& enrollForm.getSsn1().trim().length() != 0\n\t\t\t\t\t\t&& enrollForm.getSsn2().equals(enrollForm.getSsn1())) {\n\t\t\t\t\tif (!validateNumeric(enrollForm.getSsn2())) {\n\t\t\t\t\t\terrors.add(\"ssn1\", new ActionMessage(\"errors.numeric\",\n\t\t\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.SSN\")));\n\t\t\t\t\t} else if (enrollForm.getSsn1().trim().length() != 9) {\n\t\t\t\t\t\terrors.add(\"ssn1\", new ActionMessage(\"errors.size\",\n\t\t\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.SSN\"),\n\t\t\t\t\t\t\t\t\"9\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tprivate ActionErrors validateAddressInfo(MessageResources messageResources,\n\t\t\tEnrollForm enrollForm) {\n\t\tActionErrors errors = new ActionErrors();\n\t\tif (enrollForm != null) {\n\t\t\tif (enrollForm.getAddress1() == null\n\t\t\t\t\t|| enrollForm.getAddress1().trim().length() == 0) {\n\t\t\t\terrors.add(\"address1\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.addr1\")));\n\t\t\t}\n\t\t\tif (enrollForm.getCity() == null\n\t\t\t\t\t|| enrollForm.getCity().trim().length() == 0) {\n\t\t\t\terrors.add(\"city\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.city\")));\n\t\t\t}\n\t\t\tif (enrollForm.getState() == null\n\t\t\t\t\t|| enrollForm.getState().trim().length() == 0) {\n\t\t\t\terrors.add(\"state\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.state\")));\n\t\t\t}\n\t\t\tif (enrollForm.getPostalCode() == null\n\t\t\t\t\t|| enrollForm.getPostalCode().trim().length() == 0) {\n\t\t\t\terrors.add(\"postalCode\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.postalCode\")));\n\t\t\t} else if (enrollForm.getPostalCode() != null\n\t\t\t\t\t&& enrollForm.getPostalCode().trim().length() != 5) {\n\t\t\t\terrors.add(\"postalCode\", new ActionMessage(\"errors.minlength\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.postalCode\"),\n\t\t\t\t\t\t\"5\"));\n\t\t\t}\n\t\t\tif (enrollForm.getPhone() == null\n\t\t\t\t\t|| enrollForm.getPhone().trim().length() == 0) {\n\t\t\t\terrors.add(\"phone\", new ActionMessage(\"errors.required\",\n\t\t\t\t\t\tmessageResources.getMessage(\"enrollPage.dayPhone\")));\n\t\t\t} else if (enrollForm.getPhone() != null\n\t\t\t\t\t&& enrollForm.getPhone().trim().length() > 0) {\n\t\t\t\tif (!validateNumeric(enrollForm.getPhone())) {\n\t\t\t\t\terrors\n\t\t\t\t\t\t\t.add(\"phone\", new ActionMessage(\"errors.numeric\",\n\t\t\t\t\t\t\t\t\tmessageResources\n\t\t\t\t\t\t\t\t\t\t\t.getMessage(\"enrollPage.dayPhone\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tprivate boolean validatePassword(String password) {\n\t\tif (password\n\t\t\t\t.matches(\"^(?=.{8,})(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^+=]).*$\")) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate boolean validateNumeric(String number) {\n\t\tif (Pattern.matches(\"[0-9]+\", number))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\n\tprivate boolean validateDateOfBirth(String value) {\n\t\tif (!MerchantAppValidator.isThisDateValid(value, \"MM/dd/yyyy\"))\n\t\t\treturn false;\n\t\tboolean valid = true;\n\t\tint minAge = 18;\n\t\tint maxAge = 150;\n\t\tif (!GenericValidator.isBlankOrNull(value)) {\n\t\t\ttry {\n\t\t\t\tStringTokenizer tokens = new StringTokenizer(value, \"/\");\n\t\t\t\tint year = 0;\n\t\t\t\tint month = 0;\n\t\t\t\tint day = 0;\n\t\t\t\tif (tokens.hasMoreTokens()) {\n\t\t\t\t\tmonth = Integer.parseInt(tokens.nextToken()) - 1;\n\t\t\t\t\tday = Integer.parseInt(tokens.nextToken());\n\t\t\t\t\tyear = Integer.parseInt(tokens.nextToken());\n\t\t\t\t}\n\t\t\t\tCalendar cal = Calendar.getInstance(TimeZone\n\t\t\t\t\t\t.getTimeZone(\"America/New_York\"));\n\t\t\t\tDate today = cal.getTime();\n\t\t\t\tCalendar minDate = Calendar.getInstance(TimeZone\n\t\t\t\t\t\t.getTimeZone(\"America/New_York\"));\n\t\t\t\tminDate.set(year + minAge, month, day);\n\t\t\t\tCalendar maxDate = Calendar.getInstance(TimeZone\n\t\t\t\t\t\t.getTimeZone(\"America/New_York\"));\n\t\t\t\tmaxDate.set(year + maxAge, month, day);\n\t\t\t\tif (minDate.getTime().after(today)\n\t\t\t\t\t\t|| maxDate.getTime().before(today)) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t}\n\t\treturn valid;\n\t}\n\n\tprivate boolean validateExpiredDate(String value) {\n\t\tif (!MerchantAppValidator.isThisDateValid(value, \"MM/dd/yyyy\"))\n\t\t\treturn false;\n\t\tboolean valid = true;\n\t\tif (!GenericValidator.isBlankOrNull(value)) {\n\t\t\ttry {\n\t\t\t\tStringTokenizer tokens = new StringTokenizer(value, \"/\");\n\t\t\t\tint year = 0;\n\t\t\t\tint month = 0;\n\t\t\t\tint day = 0;\n\t\t\t\tif (tokens.hasMoreTokens()) {\n\t\t\t\t\tmonth = Integer.parseInt(tokens.nextToken()) - 1;\n\t\t\t\t\tday = Integer.parseInt(tokens.nextToken());\n\t\t\t\t\tyear = Integer.parseInt(tokens.nextToken()) - 1900;\n\t\t\t\t}\n\t\t\t\tDate today = new Date();\n\t\t\t\tDate inputDate = new Date(year, month, day);\n\t\t\t\tSimpleDateFormat fmt = new SimpleDateFormat(\"yyyyMMdd\");\n\t\t\t\tif (!inputDate.after(today)\n\t\t\t\t\t\t&& !fmt.format(today).equals(fmt.format(inputDate))) {\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t}\n\t\treturn valid;\n\t}\n\n\tpublic ActionForward Save(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.info(\"Entering Save\");\n\t\tActionErrors errors = new ActionErrors();\n\t\tActionForward forward = new ActionForward();\n\t\tMessageResources messageResources = getResources(request);\n\n\t\tHttpSession session = request.getSession(true);\n\t\tCashLineForm sessionFormBean = (CashLineForm) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT);\n\n\t\tEnrollHelper enrollHelper = (EnrollHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_ENROLL_HELPER);\n\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\n\t\terrors = customValidateSave(messageResources, enrollForm);\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t} else {\n\t\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\t\ttry {\n\t\t\t\tConsumerTO consumer = null;\n\t\t\t\tif (sessionFormBean != null\n\t\t\t\t\t\t&& sessionFormBean.getConsumer() != null) {\n\t\t\t\t\tenrollForm.setCustomerTOForUpdate(enrollForm);\n\t\t\t\t\tenrollForm.getConsumerTO().setC_uid(\n\t\t\t\t\t\t\tsessionFormBean.getConsumer().getC_uid());\n\t\t\t\t\tenrollForm.getConsumerTO().setMid(\n\t\t\t\t\t\t\tenrollHelper.getCashline_mid());\n\t\t\t\t\tconsumer = ebd.saveConsumer(enrollForm.getConsumerTO());\n\t\t\t\t\tlog.debug(\"consumer saved in cashline = \"\n\t\t\t\t\t\t\t+ consumer.getC_uid());\n\t\t\t\t\tenrollForm.setConsumerTO(consumer);\n\t\t\t\t} else {\n\t\t\t\t\tsessionFormBean = new CashLineForm();\n\t\t\t\t\tenrollForm.setCustomerTOForm(enrollForm);\n\t\t\t\t\tenrollForm.getConsumerTO().setMid(\n\t\t\t\t\t\t\tenrollHelper.getCashline_mid());\n\t\t\t\t\tconsumer = ebd.createConsumer(enrollForm.getConsumerTO());\n\t\t\t\t\tlog.debug(\"consumer created in cashline = \"\n\t\t\t\t\t\t\t+ consumer.getC_uid());\n\n\t\t\t\t\t// the user got created and the session is established\n\t\t\t\t\tsessionFormBean.setConsumer(consumer);\n\t\t\t\t\tloadSession(sessionFormBean, request);\n\t\t\t\t}\n\t\t\t\tlog.info(\"Consumer : \" + consumer.toString());\n\t\t\t\tenrollForm.setActionMessage(prepareSuccessSaveResponse());\n\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t} catch (CheckServicesException cse) {\n\t\t\t\tif (cse.getMessage().equalsIgnoreCase(\"USERNAME_EXISTS\")) {\n\t\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t\t.getMessage(\"enrollPage.errors.usernameExists\");\n\t\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t\t} else if (cse.getMessage().equalsIgnoreCase(\"DL_EXISTS\")) {\n\t\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t\t.getMessage(\"enrollPage.errors.dlExists\");\n\t\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t\t} else if (cse.getMessage().equalsIgnoreCase(\"CONSUMER_EXISTS\")) {\n\t\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t\t.getMessage(\"enrollPage.errors.consumerExists\");\n\t\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t\t} else {\n\t\t\t\t\tlog.error(\"Other CheckServicesException : \"\n\t\t\t\t\t\t\t+ cse.getMessage());\n\t\t\t\t\terrors.add(\"SaveErrors\", new ActionMessage(\n\t\t\t\t\t\t\t\"sciclient.msg.error\"));\n\t\t\t\t\tforward = mapping.findForward(\"error\");\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\t// add errors\n\t\t\t\terrors.add(\"name\", new ActionMessage(\"id\"));\n\t\t\t\tlog.error(\" EnrollAction Error\" + e);\n\t\t\t\tforward = mapping.findForward(\"error\");\n\t\t\t}\n\t\t\tif (!errors.isEmpty()) {\n\t\t\t\tsaveErrors(request, errors);\n\t\t\t}\n\t\t}\n\t\treturn forward;\n\t}\n\n\tpublic ActionForward Next(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.info(\"Entering Next\");\n\t\tActionErrors errors = new ActionErrors();\n\t\tActionForward forward = new ActionForward();\n\t\tHttpSession session = request.getSession();\n\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\n\t\tString sessionKey = (String) session\n\t\t\t\t.getAttribute(ApplicationConstants.CAPTCHA_KEY);\n\t\tEnrollHelper enrollHelper = (EnrollHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_ENROLL_HELPER);\n\t\tString formKey = enrollForm.getCaptchaText();\n\n\t\tif (enrollHelper == null) {\n\t\t\tenrollHelper = populateEnrollHelper(new EnrollHelper(), session);\n\t\t}\n\n\t\tif (!validateCaptcha(sessionKey, formKey)) {\n\t\t\tenrollForm.setSecurityInfo(null);\n\t\t\terrors.add(\"catpchaMismatch\", new ActionMessage(\n\t\t\t\t\t\"enrollPage.captcha.mismatch\"));\n\t\t}\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t} else {\n\n\t\t\tenrollForm.setAchAgreement(enrollHelper.getAchAgreement());\n\t\t\tenrollForm.setCashLineAgreement(enrollHelper.getOtbAgreement());\n\n\t\t\tif (enrollForm.getVerifyAccountNumber() != null\n\t\t\t\t\t&& enrollForm.getVerifyAccountNumber().trim().length() > 0\n\t\t\t\t\t&& enrollForm.getAccountNumber() != null\n\t\t\t\t\t&& enrollForm.getAccountNumber().trim().length() > 0) {\n\t\t\t\tenrollForm.setShowAchAgreement(\"Y\");\n\t\t\t}\n\t\t\tenrollForm.setEnrollHeader(\"Y\");\n\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t\tenrollForm.setSecurityInfo(\"Y\");\n\t\t}\n\t\tforward = mapping.findForward(\"enroll\");\n\t\treturn forward;\n\t}\n\n\tpublic ActionForward Edit(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.info(\"Entering Edit\");\n\t\tActionErrors errors = new ActionErrors();\n\t\tActionForward forward = new ActionForward();\n\t\tHttpSession session = request.getSession();\n\t\tMessageResources messageResources = getResources(request);\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\n\t\tEnrollHelper enrollHelper = (EnrollHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_ENROLL_HELPER);\n\n\t\tString section = request.getParameter(\"section\");\n\n\t\tlog.info(\"Entering EnrollAction Edit section: \" + section);\n\n\t\tenrollForm.setPreviousSection(enrollForm.getCurrentSection());\n\n\t\tlog.info(\"Previous section: \" + enrollForm.getPreviousSection());\n\n\t\tenrollForm.setEnrollHeader(\"Y\");\n\t\tenrollForm.setShowAchAgreement(enrollForm.getShowAchAgreement());\n\n\t\tif (section.equals(\"login\")) {\n\t\t\tenrollForm.setCurrentSection(\"login\");\n\t\t\tenrollForm.setLoginInfo(null);\n\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t} else if (section.equals(\"personal\")) {\n\t\t\tenrollForm.setCurrentSection(\"personal\");\n\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\tenrollForm.setPersonalInfo(null);\n\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t} else if (section.equals(\"address\")) {\n\t\t\tenrollForm.setCurrentSection(\"address\");\n\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\tenrollForm.setCurrentAddress(null);\n\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t} else if (section.equals(\"bank\")) {\n\t\t\tenrollForm.setCurrentSection(\"bank\");\n\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\tif (enrollHelper != null) {\n\t\t\t\tenrollForm.setAchAgreement(enrollHelper.getAchAgreement());\n\t\t\t\tenrollForm.setShowAchAgreement(\"Y\");\n\t\t\t}\n\t\t\tenrollForm.setBankAccoutInfo(null);\n\t\t}\n\n\t\tlog.info(\"Current Section : \" + enrollForm.getCurrentSection());\n\n\t\tif (enrollForm.getPreviousSection() != null) {\n\t\t\tif (enrollForm.getPreviousSection().equals(\"login\")) {\n\t\t\t\terrors = validateLoginInfo(messageResources, enrollForm);\n\t\t\t\tif (!errors.isEmpty()) {\n\t\t\t\t\tenrollForm.setCurrentSection(\"login\");\n\t\t\t\t\tenrollForm.setLoginInfo(null);\n\t\t\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t\t\t}\n\t\t\t} else if (enrollForm.getPreviousSection().equals(\"personal\")) {\n\t\t\t\terrors = validatePersonalInfo(messageResources, enrollForm);\n\t\t\t\tif (!errors.isEmpty()) {\n\t\t\t\t\tenrollForm.setCurrentSection(\"personal\");\n\t\t\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\t\t\tenrollForm.setPersonalInfo(null);\n\t\t\t\t\tenrollForm.setCurrentAddress(\"Y\");\n\t\t\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t\t\t}\n\t\t\t} else if (enrollForm.getPreviousSection().equals(\"address\")) {\n\t\t\t\terrors = validateAddressInfo(messageResources, enrollForm);\n\t\t\t\tif (!errors.isEmpty()) {\n\t\t\t\t\tenrollForm.setCurrentSection(\"address\");\n\t\t\t\t\tenrollForm.setLoginInfo(\"Y\");\n\t\t\t\t\tenrollForm.setPersonalInfo(\"Y\");\n\t\t\t\t\tenrollForm.setCurrentAddress(null);\n\t\t\t\t\tenrollForm.setBankAccoutInfo(\"Y\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t\tforward = mapping.findForward(\"fail\");\n\t\t} else {\n\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t}\n\t\treturn forward;\n\t}\n\n\tpublic ActionForward unspecified(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.debug(\"Entering unspecified\");\n\t\tActionErrors errors = new ActionErrors();\n\t\tActionForward forward = new ActionForward();\n\t\tHttpSession session = request.getSession();\n\t\tCashLineForm sessionFormBean = (CashLineForm) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT);\n\n\t\tsessionFormBean = new CashLineForm();\n\t\tloadEnrollSession(sessionFormBean, request);\n\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\n\t\tif (enrollForm.getNpiConsumerAcceptance() != null\n\t\t\t\t&& enrollForm.getNpiConsumerAcceptance().equalsIgnoreCase(\"on\")) {\n\t\t\tenrollForm.setNpiConsumerAcceptance(\"Y\");\n\t\t}\n\n\t\tEnrollHelper enrollHelper = new EnrollHelper();\n\t\tenrollHelper = populateEnrollHelper(enrollHelper, session);\n\t\tif (enrollHelper == null) {\n\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\"error.global.systemerror\"));\n\t\t}\n\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t\tforward = mapping.findForward(\"fail\");\n\t\t} else {\n\t\t\tforward = mapping.findForward(\"success\");\n\t\t}\n\t\tlog.debug(\"Exit unspecified\");\n\t\treturn forward;\n\t}\n\n\tpublic ActionForward Submit(ActionMapping mapping, ActionForm form,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows Exception {\n\t\tlog.debug(\"Entering Submit\");\n\t\tActionErrors errors = new ActionErrors();\n\n\t\tActionForward forward = new ActionForward();\n\n\t\tMessageResources messageResources = getResources(request);\n\t\tHttpSession session = request.getSession();\n\n\t\tCashLineForm sessionFormBean = (CashLineForm) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT);\n\n\t\tEnrollHelper enrollHelper = (EnrollHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_ENROLL_HELPER);\n\n\t\tMerchantPresentationHelper merchantViewHelper = (MerchantPresentationHelper) session\n\t\t\t\t.getAttribute(ApplicationConstants.SV_MERCHANT_VIEW_HELPER);\n\n\t\tEnrollForm enrollForm = (EnrollForm) form;\n\t\tif (enrollForm.getAchConsumerAcceptance() != null\n\t\t\t\t&& enrollForm.getAchConsumerAcceptance().equalsIgnoreCase(\"on\")) {\n\t\t\tenrollForm.setAchConsumerAcceptance(\"Y\");\n\t\t} else {\n\t\t\tenrollForm.setAchConsumerAcceptance(\"N\");\n\t\t}\n\t\tif (enrollForm.getCashLineConsumerAcceptance() != null\n\t\t\t\t&& enrollForm.getCashLineConsumerAcceptance().equalsIgnoreCase(\n\t\t\t\t\t\t\"on\")) {\n\t\t\tenrollForm.setCashLineConsumerAcceptance(\"Y\");\n\t\t} else {\n\t\t\tenrollForm.setCashLineConsumerAcceptance(\"N\");\n\t\t}\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tSCIClientCall econnect = new SCIClientCall();\n\t\tSCIClientRequestForm econnectRequest = new SCIClientRequestForm();\n\t\tSCIClientResponseForm econnectResponse = new SCIClientResponseForm();\n\t\tboolean doReversal = false;\n\t\tboolean doACHAuthorization = false;\n\t\tboolean doFailOver = false;\n\t\tString txid = null;\n\n\t\ttry {\n\t\t\tConsumerTO consumer = null;\n\t\t\tif (sessionFormBean != null\n\t\t\t\t\t&& sessionFormBean.getConsumer() != null) {\n\t\t\t\tenrollForm.setCustomerTOForUpdate(enrollForm);\n\t\t\t\tenrollForm.getConsumerTO().setC_uid(\n\t\t\t\t\t\tsessionFormBean.getConsumer().getC_uid());\n\t\t\t\tenrollForm.getConsumerTO().setUserName(\n\t\t\t\t\t\tsessionFormBean.getConsumer().getUserName());\n\t\t\t\tenrollForm.getConsumerTO().setMid(\n\t\t\t\t\t\tenrollHelper.getCashline_mid());\n\t\t\t\tconsumer = ebd.saveConsumer(enrollForm.getConsumerTO());\n\t\t\t\tlog\n\t\t\t\t\t\t.debug(\"consumer saved in cashline = \"\n\t\t\t\t\t\t\t\t+ consumer.getC_uid());\n\t\t\t\tenrollForm.setConsumerTO(consumer);\n\t\t\t} else {\n\t\t\t\tenrollForm.setCustomerTOForm(enrollForm);\n\t\t\t\tenrollForm.getConsumerTO().setMid(\n\t\t\t\t\t\tenrollHelper.getCashline_mid());\n\t\t\t\tconsumer = ebd.createConsumer(enrollForm.getConsumerTO());\n\t\t\t\tlog.debug(\"consumer created in cashline = \"\n\t\t\t\t\t\t+ consumer.getC_uid());\n\t\t\t}\n\t\t\tif (consumer.getC_uid() != null\n\t\t\t\t\t&& consumer.getC_uid().trim().length() > 0) {\n\n\t\t\t\t// the user got created and the session is established\n\t\t\t\tsessionFormBean.setConsumer(consumer);\n\t\t\t\tloadSession(sessionFormBean, request);\n\n\t\t\t\tenrollForm.setConsumerTO(consumer);\n\n\t\t\t\teconnectRequest.buildSCIClientRequestForm(enrollForm);\n\t\t\t\teconnectRequest.setTransOrigin(enrollHelper\n\t\t\t\t\t\t.getTransactionOrigin());\n\t\t\t\teconnectRequest.setCheckSwipeIndicator(\"M\");\n\t\t\t\teconnectRequest.setDlSwipeIndicator(\"M\");\n\t\t\t\teconnectRequest.setStationNumber(merchantViewHelper\n\t\t\t\t\t\t.getMerchant().getMerchantOTBACHStation());\n\t\t\t\teconnectRequest.setCheckNum(merchantViewHelper\n\t\t\t\t\t\t.getApplicationConstants().get(\"ECONNECT_CHECK_NUMBER\")\n\t\t\t\t\t\t.getConstant_value());\n\t\t\t\teconnectRequest.setMid(merchantViewHelper.getMerchant()\n\t\t\t\t\t\t.getMid());\n\t\t\t\teconnectRequest.setState(ebd\n\t\t\t\t\t\t.getStateCode(enrollForm.getState()));\n\t\t\t\teconnectRequest.setDlState(ebd.getStateCode(enrollForm\n\t\t\t\t\t\t.getDlState()));\n\t\t\t\teconnectRequest.setTransID(enrollForm.getConsumerTO()\n\t\t\t\t\t\t.getC_uid());\n\t\t\t\tString txnCode = null;\n\t\t\t\tString checkType = null;\n\t\t\t\tStringBuffer successEnrollResponse = null;\n\n\t\t\t\tif (econnectRequest.getRoutingNumber() != null\n\t\t\t\t\t\t&& econnectRequest.getRoutingNumber().trim().length() > 0\n\t\t\t\t\t\t&& econnectRequest.getAccountNumber() != null\n\t\t\t\t\t\t&& econnectRequest.getAccountNumber().trim().length() > 0) {\n\t\t\t\t\ttxnCode = messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_ACHENROLL);\n\t\t\t\t\tcheckType = \"E\";\n\t\t\t\t} else {\n\t\t\t\t\ttxnCode = messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_OTBENROLL);\n\t\t\t\t\tcheckType = \"P\";\n\t\t\t\t}\n\t\t\t\tlog.debug(\"Transaction pursued is \" + txnCode);\n\n\t\t\t\teconnectRequest.setCheckType(checkType);\n\t\t\t\teconnectRequest.setTxnCode(txnCode);\n\n\t\t\t\t// Sending AE Txn\n\t\t\t\teconnectResponse = econnect.processTransaction(\n\t\t\t\t\t\tmessageResources, econnectRequest, merchantViewHelper\n\t\t\t\t\t\t\t\t.getApplicationConstants());\n\n\t\t\t\tenrollForm.setCashlineLimit(econnectResponse.getOtbLimit());\n\n\t\t\t\tlog.debug(\"OTB enrollment Approval number : \"\n\t\t\t\t\t\t+ econnectResponse.getApprovalNum());\n\n\t\t\t\tif (econnectResponse.getStatusCode() == null) {\n\t\t\t\t\tdoACHAuthorization = false;\n\t\t\t\t\tlog\n\t\t\t\t\t\t\t.error(\"Status Code \"\n\t\t\t\t\t\t\t\t\t+ econnectResponse.getStatusCode());\n\t\t\t\t\tenrollForm\n\t\t\t\t\t\t\t.setActionMessage(prepareSystemErrorMessage(messageResources));\n\n\t\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t\t} else if (econnectResponse.getStatusCode().trim()\n\t\t\t\t\t\t.equalsIgnoreCase(\"D\")) {\n\n\t\t\t\t\tdoACHAuthorization = false;\n\t\t\t\t\tboolean showDeclineMessage = false;\n\t\t\t\t\t// OTB enrollment unsuccessful\n\n\t\t\t\t\t// check to see if there is an otb consumer record in\n\t\t\t\t\t// ECage Gaming database\n\t\t\t\t\tConsumerOtbTO consumerOtb = ebd\n\t\t\t\t\t\t\t.findConsumerOtbByCid(consumer.getC_uid());\n\n\t\t\t\t\tif (txnCode.equalsIgnoreCase(messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_OTBENROLL))) {\n\t\t\t\t\t\tif (consumerOtb != null\n\t\t\t\t\t\t\t\t&& consumerOtb.getActiveStatus()\n\t\t\t\t\t\t\t\t\t\t.equalsIgnoreCase(\"A\")) {\n\t\t\t\t\t\t\tsuccessEnrollResponse = new StringBuffer();\n\t\t\t\t\t\t\tsuccessEnrollResponse\n\t\t\t\t\t\t\t\t\t.append(prepareSuccessEnrollACHOptOutResponse(enrollForm\n\t\t\t\t\t\t\t\t\t\t\t.getCashlineLimit()));\n\t\t\t\t\t\t\tsuccessEnrollResponse.append(\"<br/>\");\n\t\t\t\t\t\t\tenrollForm.setActionMessage(successEnrollResponse\n\t\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowDeclineMessage = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (consumerOtb != null\n\t\t\t\t\t\t\t\t&& consumerOtb.getActiveStatus()\n\t\t\t\t\t\t\t\t\t\t.equalsIgnoreCase(\"A\")) {\n\t\t\t\t\t\t\tsuccessEnrollResponse = new StringBuffer();\n\t\t\t\t\t\t\tsuccessEnrollResponse\n\t\t\t\t\t\t\t\t\t.append(prepareSuccessEnrollOTBOnlyResponse(String\n\t\t\t\t\t\t\t\t\t\t\t.valueOf(consumerOtb.getOtbLimit())));\n\t\t\t\t\t\t\tsuccessEnrollResponse.append(\"<br/>\");\n\t\t\t\t\t\t\tenrollForm.setActionMessage(successEnrollResponse\n\t\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowDeclineMessage = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (showDeclineMessage) {\n\t\t\t\t\t\tStringBuffer declineEnrollResponse = new StringBuffer();\n\t\t\t\t\t\tdeclineEnrollResponse\n\t\t\t\t\t\t\t\t.append(prepareDeclineEnrollResponse());\n\t\t\t\t\t\tlog.debug(\"errMsg = \"\n\t\t\t\t\t\t\t\t+ declineEnrollResponse.toString());\n\t\t\t\t\t\tif (declineEnrollResponse != null\n\t\t\t\t\t\t\t\t&& declineEnrollResponse.toString().trim()\n\t\t\t\t\t\t\t\t\t\t.length() > 0) {\n\t\t\t\t\t\t\tenrollForm.setActionMessage(declineEnrollResponse\n\t\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tenrollForm\n\t\t\t\t\t\t\t\t\t.setActionMessage(prepareSystemErrorMessage(messageResources));\n\t\t\t\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// status code is S\n\t\t\t\t\tlog.debug(\"OTB Limit = \" + enrollForm.getCashlineLimit());\n\t\t\t\t\tif (txnCode.equalsIgnoreCase(messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_OTBENROLL))) {\n\t\t\t\t\t\tdoACHAuthorization = false;\n\t\t\t\t\t\tsuccessEnrollResponse = new StringBuffer();\n\t\t\t\t\t\tsuccessEnrollResponse\n\t\t\t\t\t\t\t\t.append(prepareSuccessEnrollACHOptOutResponse(enrollForm\n\t\t\t\t\t\t\t\t\t\t.getCashlineLimit()));\n\t\t\t\t\t\tsuccessEnrollResponse.append(\"<br/>\");\n\t\t\t\t\t\tenrollForm.setActionMessage(successEnrollResponse\n\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdoACHAuthorization = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlog.debug(\"Do ACH Authorization = \" + doACHAuthorization);\n\t\t\t\tif (doACHAuthorization) {\n\n\t\t\t\t\ttxnCode = messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_ACHREPEAT);\n\t\t\t\t\teconnectRequest.setTxnCode(txnCode);\n\t\t\t\t\teconnectResponse = econnect.processTransaction(\n\t\t\t\t\t\t\tmessageResources, econnectRequest,\n\t\t\t\t\t\t\tmerchantViewHelper.getApplicationConstants());\n\n\t\t\t\t\tif (econnectResponse.getStatusCode() == null) {\n\t\t\t\t\t\tdoReversal = false;\n\t\t\t\t\t\tlog.error(\"Status Code \"\n\t\t\t\t\t\t\t\t+ econnectResponse.getStatusCode());\n\t\t\t\t\t\tenrollForm\n\t\t\t\t\t\t\t\t.setActionMessage(prepareSystemErrorMessage(messageResources));\n\t\t\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t\t\t} else if (econnectResponse.getStatusCode().trim()\n\t\t\t\t\t\t\t.equalsIgnoreCase(\"D\")) {\n\t\t\t\t\t\tboolean showDeclineMessage = false;\n\t\t\t\t\t\tdoReversal = false;\n\t\t\t\t\t\tString errMsg = null;\n\n\t\t\t\t\t\terrMsg = ebd.getResponseCodeMessage(econnectResponse\n\t\t\t\t\t\t\t\t.getResponseCode(), econnectResponse\n\t\t\t\t\t\t\t\t.getSubCode());\n\t\t\t\t\t\tlog.debug(\"errMsg = \" + errMsg);\n\t\t\t\t\t\tif (errMsg != null\n\t\t\t\t\t\t\t\t&& errMsg.trim().equalsIgnoreCase(\"Approved\")) {\n\t\t\t\t\t\t\terrMsg = null;\n\t\t\t\t\t\t\tdoReversal = false;\n\t\t\t\t\t\t\tsuccessEnrollResponse = new StringBuffer();\n\t\t\t\t\t\t\tsuccessEnrollResponse\n\t\t\t\t\t\t\t\t\t.append(prepareSuccessEnrollResponse(enrollForm\n\t\t\t\t\t\t\t\t\t\t\t.getCashlineLimit()));\n\t\t\t\t\t\t\tsuccessEnrollResponse.append(\"<br/>\");\n\t\t\t\t\t\t\tenrollForm.setActionMessage(successEnrollResponse\n\t\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tsuccessEnrollResponse = new StringBuffer();\n\t\t\t\t\t\t\tsuccessEnrollResponse\n\t\t\t\t\t\t\t\t\t.append(prepareSuccessEnrollOTBOnlyResponse(enrollForm\n\t\t\t\t\t\t\t\t\t\t\t.getCashlineLimit()));\n\t\t\t\t\t\t\tsuccessEnrollResponse.append(\"<br/>\");\n\t\t\t\t\t\t\tenrollForm.setActionMessage(successEnrollResponse\n\t\t\t\t\t\t\t\t\t.toString());\n\t\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdoReversal = true;\n\t\t\t\t\t\ttxid = econnectResponse.getTxid();\n\t\t\t\t\t\tlog.debug(\"OTB Limit = \"\n\t\t\t\t\t\t\t\t+ enrollForm.getCashlineLimit());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tlog.debug(\"Do ACH Reversal = \" + doReversal);\n\n\t\t\t\tif (doReversal) {\n\t\t\t\t\ttxnCode = messageResources.getMessage(\n\t\t\t\t\t\t\tjava.util.Locale.ENGLISH,\n\t\t\t\t\t\t\tSCIApplicationConstants.TXNCODE_ACHREVERSAL);\n\t\t\t\t\teconnectRequest.setTxnCode(txnCode);\n\t\t\t\t\teconnectRequest.setRefNum(econnectResponse\n\t\t\t\t\t\t\t.getReferenceNum());\n\t\t\t\t\teconnectRequest.setTxid(econnectResponse.getTxid());\n\n\t\t\t\t\teconnectResponse = econnect.processTransaction(\n\t\t\t\t\t\t\tmessageResources, econnectRequest,\n\t\t\t\t\t\t\tmerchantViewHelper.getApplicationConstants());\n\n\t\t\t\t\tif (econnectResponse.getStatusCode() == null) {\n\t\t\t\t\t\tdoReversal = false;\n\t\t\t\t\t\tlog.error(\"Status Code \"\n\t\t\t\t\t\t\t\t+ econnectResponse.getStatusCode());\n\t\t\t\t\t\tlog.error(\"Void for ACH txn did not happen!\");\n\t\t\t\t\t\tdoFailOver = true;\n\n\t\t\t\t\t} else if (econnectResponse.getStatusCode().trim()\n\t\t\t\t\t\t\t.equalsIgnoreCase(\"D\")) {\n\t\t\t\t\t\tlog.error(\"Status Code \"\n\t\t\t\t\t\t\t\t+ econnectResponse.getStatusCode());\n\t\t\t\t\t\tlog.error(\"Void for ACH txn did not happen!\");\n\t\t\t\t\t\tdoFailOver = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.debug(\"Reversal Approval number : \"\n\t\t\t\t\t\t\t\t+ econnectResponse.getApprovalNum());\n\t\t\t\t\t\tenrollForm\n\t\t\t\t\t\t\t\t.setActionMessage(prepareSuccessEnrollResponse(enrollForm\n\t\t\t\t\t\t\t\t\t\t.getCashlineLimit()));\n\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (doFailOver) {\n\t\t\t\t\t\tlog.debug(\"Performing failover void...\");\n\t\t\t\t\t\tTxlogTO txlog = new TxlogTO();\n\t\t\t\t\t\ttxlog.setTxid(txid);\n\t\t\t\t\t\ttxlog = ebd.updateTxlog(txlog);\n\t\t\t\t\t\tforward = mapping.findForward(\"success\");\n\t\t\t\t\t\tlog.debug(\"Completed failover void...\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t\tlog.error(\"Consumer cid is \" + consumer.getC_uid());\n\t\t\t\terrors.add(\"temp\", new ActionMessage(\"errors.header\"));\n\t\t\t}\n\t\t} catch (CheckServicesException cse) {\n\t\t\tif (cse.getMessage().equalsIgnoreCase(\"USERNAME_EXISTS\")) {\n\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t.getMessage(\"enrollPage.errors.usernameExists\");\n\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t} else if (cse.getMessage().equalsIgnoreCase(\"DL_EXISTS\")) {\n\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t.getMessage(\"enrollPage.errors.dlExists\");\n\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t} else if (cse.getMessage().equalsIgnoreCase(\"CONSUMER_EXISTS\")) {\n\t\t\t\tString tempMsg = messageResources\n\t\t\t\t\t\t.getMessage(\"enrollPage.errors.consumerExists\");\n\t\t\t\terrors.add(\"EnrollErrors\", new ActionMessage(\n\t\t\t\t\t\t\"enrollPage.errors.actionMessages\", tempMsg));\n\t\t\t\tforward = mapping.findForward(\"enroll\");\n\t\t\t} else {\n\t\t\t\tlog.error(\"Other CheckServicesException : \" + cse.getMessage());\n\t\t\t\terrors.add(\"temp\", new ActionMessage(\"errors.header\"));\n\t\t\t\tforward = mapping.findForward(\"fail\");\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"General Exception : \" + e);\n\t\t\tenrollForm\n\t\t\t\t\t.setActionMessage(prepareSystemErrorMessage(messageResources));\n\t\t\tforward = mapping.findForward(\"fail\");\n\t\t}\n\n\t\tif (!errors.isEmpty()) {\n\t\t\tsaveErrors(request, errors);\n\t\t}\n\t\treturn forward;\n\t}\n\n\tprivate String prepareSuccessEnrollResponse(String cashLineLimit) {\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tStringBuffer message = new StringBuffer();\n\t\tString returnMessage = new String();\n\n\t\ttry {\n\t\t\tHashMap<String, String> messages = ebd\n\t\t\t\t\t.getSuccessResponseMessages(\"ENROLL\");\n\t\t\tif (messages != null) {\n\t\t\t\treturnMessage = messages.get(\"SuccessEnrollMessage\");\n\n\t\t\t\tmessage.append(\"$ \");\n\t\t\t\tmessage.append(Long.parseLong(cashLineLimit));\n\t\t\t\tmessage.append(\".00\");\n\n\t\t\t\tCharSequence target = \"<CASHLIMIT>\";\n\t\t\t\tCharSequence replacement = message.toString();\n\n\t\t\t\treturnMessage = returnMessage.replace(target, replacement);\n\t\t\t}\n\n\t\t\tlog.debug(\"In prepareSuccessEnrollResponse message = \"\n\t\t\t\t\t+ returnMessage);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving success enroll message.\"\n\t\t\t\t\t+ e.getMessage());\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tprivate String prepareSuccessEnrollOTBOnlyResponse(String cashLineLimit) {\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tStringBuffer message = new StringBuffer();\n\t\tString returnMessage = new String();\n\n\t\ttry {\n\t\t\tHashMap<String, String> messages = ebd\n\t\t\t\t\t.getSuccessResponseMessages(\"ENROLL\");\n\t\t\tif (messages != null) {\n\t\t\t\treturnMessage = messages.get(\"SuccessEnrollOTBOnlyMessage\");\n\n\t\t\t\tmessage.append(\"$ \");\n\t\t\t\tmessage.append(Long.parseLong(cashLineLimit));\n\t\t\t\tmessage.append(\".00\");\n\n\t\t\t\tCharSequence target = \"<CASHLIMIT>\";\n\t\t\t\tCharSequence replacement = message.toString();\n\n\t\t\t\treturnMessage = returnMessage.replace(target, replacement);\n\t\t\t}\n\n\t\t\tlog.debug(\"In prepareSuccessEnrollOTBOnlyResponse message = \"\n\t\t\t\t\t+ returnMessage);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving success enroll otb only message.\"\n\t\t\t\t\t+ e.getMessage());\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tprivate String prepareSuccessEnrollACHOptOutResponse(String cashLineLimit) {\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tStringBuffer message = new StringBuffer();\n\t\tString returnMessage = new String();\n\n\t\ttry {\n\t\t\tHashMap<String, String> messages = ebd\n\t\t\t\t\t.getSuccessResponseMessages(\"ENROLL\");\n\t\t\tif (messages != null) {\n\t\t\t\treturnMessage = messages.get(\"SuccessEnrollACHOptOutMessage\");\n\n\t\t\t\tmessage.append(\"$ \");\n\t\t\t\tmessage.append(Long.parseLong(cashLineLimit));\n\t\t\t\tmessage.append(\".00\");\n\n\t\t\t\tCharSequence target = \"<CASHLIMIT>\";\n\t\t\t\tCharSequence replacement = message.toString();\n\n\t\t\t\treturnMessage = returnMessage.replace(target, replacement);\n\t\t\t}\n\n\t\t\tlog.debug(\"In prepareSuccessEnrollOTBOnlyResponse message = \"\n\t\t\t\t\t+ returnMessage);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving success enroll otb only message.\"\n\t\t\t\t\t+ e.getMessage());\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tprivate String prepareSuccessSaveResponse() {\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tString returnMessage = new String();\n\t\ttry {\n\t\t\tHashMap<String, String> messages = ebd\n\t\t\t\t\t.getSuccessResponseMessages(\"SAVE\");\n\t\t\treturnMessage = messages.get(\"SuccessSaveMessage\");\n\n\t\t\tlog.debug(\"In prepareSuccessSaveResponse message = \"\n\t\t\t\t\t+ returnMessage);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving success save message.\"\n\t\t\t\t\t+ e.getMessage());\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tprivate String prepareDeclineEnrollResponse() {\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tString returnMessage = new String();\n\t\ttry {\n\t\t\tHashMap<String, String> messages = ebd.getDeclineResponseMessages();\n\t\t\treturnMessage = messages.get(\"DeclineAdverseActionNotice\");\n\n\t\t\tlog.debug(\"In prepareDeclineEnrollResponse message = \"\n\t\t\t\t\t+ returnMessage);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Error while retrieving decline enroll message.\"\n\t\t\t\t\t+ e.getMessage());\n\t\t}\n\t\treturn returnMessage;\n\t}\n\n\tprivate boolean validateCaptcha(String sessionKey, String formKey) {\n\t\tif (formKey != null && sessionKey != null && sessionKey.equals(formKey)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate void loadSession(CashLineForm sessionFormBean,\n\t\t\tHttpServletRequest request) throws CheckServicesException {\n\t\tConsumerTO consumer = sessionFormBean.getConsumer();\n\t\tMessageResources resourceBundle = getResources(request);\n\t\tHttpSession session = request.getSession(true);\n\n\t\t/*\n\t\t * Start fetch and set session timeout in session\n\t\t */\n\t\tString sessionTimeOut = resourceBundle\n\t\t\t\t.getMessage(\"application.session.timeout\");\n\t\tString sessionTimeOutMessage = resourceBundle\n\t\t\t\t.getMessage(\"application.session.timeout.message.appearance\");\n\t\tint intSessionTimeOut = 0;\n\t\tif (sessionTimeOut != null) {\n\t\t\tintSessionTimeOut = Integer.parseInt(sessionTimeOut.trim());\n\t\t} else {\n\t\t\tintSessionTimeOut = 30;\n\t\t}\n\t\tint intSessionTimeOutMessage = 0;\n\t\tif (sessionTimeOutMessage != null) {\n\t\t\tintSessionTimeOutMessage = Integer.parseInt(sessionTimeOutMessage\n\t\t\t\t\t.trim());\n\t\t} else {\n\t\t\tintSessionTimeOutMessage = 25;\n\t\t}\n\n\t\tsessionFormBean.setSessionTimeoutInSeconds(intSessionTimeOut * 60);\n\t\tsessionFormBean\n\t\t\t\t.setSessionTimeoutMsgSeconds(intSessionTimeOutMessage * 60);\n\t\t/*\n\t\t * End fetch and set session timeout in session\n\t\t */\n\n\t\tsynchronized (session) {\n\t\t\tsessionFormBean.setSessionID(session.getId());\n\t\t\tlog.debug(\"loadSession(): Created new session (\"\n\t\t\t\t\t+ sessionFormBean.getSessionID() + \") for user \"\n\t\t\t\t\t+ consumer.getUserName());\n\t\t\tsession.setAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT,\n\t\t\t\t\tsessionFormBean);\n\n\t\t}\n\t}\n\n\tprivate void loadEnrollSession(CashLineForm sessionFormBean,\n\t\t\tHttpServletRequest request) throws CheckServicesException {\n\t\tMessageResources resourceBundle = getResources(request);\n\t\tHttpSession session = request.getSession(true);\n\n\t\t/*\n\t\t * Start fetch and set session timeout in enrollment screen\n\t\t */\n\t\tString sessionTimeOut = resourceBundle\n\t\t\t\t.getMessage(\"application.enroll.session.timeout\");\n\t\tString sessionTimeOutMessage = resourceBundle\n\t\t\t\t.getMessage(\"application.enroll.session.timeout.message.appearance\");\n\t\tint intSessionTimeOut = 0;\n\t\tif (sessionTimeOut != null) {\n\t\t\tintSessionTimeOut = Integer.parseInt(sessionTimeOut.trim());\n\t\t} else {\n\t\t\tintSessionTimeOut = 10;\n\t\t}\n\t\tint intSessionTimeOutMessage = 0;\n\t\tif (sessionTimeOutMessage != null) {\n\t\t\tintSessionTimeOutMessage = Integer.parseInt(sessionTimeOutMessage\n\t\t\t\t\t.trim());\n\t\t} else {\n\t\t\tintSessionTimeOutMessage = 5;\n\t\t}\n\n\t\tsessionFormBean.setSessionTimeoutInSeconds(intSessionTimeOut * 60);\n\t\tsessionFormBean\n\t\t\t\t.setSessionTimeoutMsgSeconds(intSessionTimeOutMessage * 60);\n\t\t/*\n\t\t * End fetch and set session timeout in enrollment screen\n\t\t */\n\n\t\tsynchronized (session) {\n\t\t\tsessionFormBean.setSessionID(session.getId());\n\t\t\tlog.debug(\"loadSession(): Created new session (\"\n\t\t\t\t\t+ sessionFormBean.getSessionID() + \")\");\n\t\t\tsession.setAttribute(ApplicationConstants.SV_USER_SESSION_OBJECT,\n\t\t\t\t\tsessionFormBean);\n\n\t\t}\n\t}\n\n\tprivate EnrollHelper populateEnrollHelper(EnrollHelper enrollHelper,\n\t\t\tHttpSession session) {\n\t\tEnrollTO enrollTo = new EnrollTO();\n\t\tEnrollBusinessDelegate ebd = new EnrollBusinessDelegate();\n\t\tString mid = null;\n\t\ttry {\n\t\t\tif (enrollHelper == null)\n\t\t\t\tenrollHelper = new EnrollHelper();\n\n\t\t\tMerchantPresentationHelper viewHelper = (MerchantPresentationHelper) session\n\t\t\t\t\t.getAttribute(ApplicationConstants.SV_MERCHANT_VIEW_HELPER);\n\t\t\tif (viewHelper != null) {\n\t\t\t\tmid = viewHelper.getMerchant().getMid();\n\n\t\t\t\tenrollHelper.setCashline_mid(mid);\n\t\t\t\tenrollHelper.setTotalRewardsNoLabelText(viewHelper\n\t\t\t\t\t\t.getMerchantUIConfiguration().getResourceAlias());\n\t\t\t\tenrollHelper.setTotalRewardsNoEnabledInd(viewHelper\n\t\t\t\t\t\t.getMerchantUIConfiguration().getEnabledInd());\n\t\t\t\tenrollHelper.setEnrollScreenLogoText(viewHelper\n\t\t\t\t\t\t.getScreenMessages().get(\"enroll_screen_logo\"));\n\t\t\t}\n\t\t\tenrollTo = ebd.prepareEnrollDisplay(viewHelper.getMerchant()\n\t\t\t\t\t.getMerchantName());\n\t\t\tenrollHelper.populateHelper(enrollTo);\n\t\t\tsession.setAttribute(ApplicationConstants.SV_ENROLL_HELPER,\n\t\t\t\t\tenrollHelper);\n\t\t} catch (CheckServicesException cse) {\n\t\t\tlog.error(\"System error: \" + cse.getMessage());\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"EnrollAction Error\" + e);\n\t\t}\n\n\t\treturn enrollHelper;\n\t}\n\n\tprivate String prepareSystemErrorMessage(MessageResources messageResources) {\n\t\tStringBuffer errorMessage = new StringBuffer();\n\t\terrorMessage.append(messageResources.getMessage(\"error.systemerror\"));\n\t\terrorMessage.append(\"<br>\");\n\t\terrorMessage.append(messageResources.getMessage(\"error.systemmessage\"));\n\t\treturn errorMessage.toString();\n\t}\n\n}\n","markers":{"markers":{"1":{"id":1,"range":[[969,39],[969,39]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":109,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e0e6b77f1d28cbd7aeee381352aec55fa0359b55","deserializer":"TextBuffer"},{"text":"// Trims all spaces to the left of a specific string\nfunction LTrim(str) {\n\tvar whitespace = new String(\" \\t\\n\\r \");\n\t// last space character is not a space, but alt+0160,\n\t// another invisible char.\n\tvar s = new String(str);\n\tif (whitespace.indexOf(s.charAt(0)) != -1) {\n\t\t// We have a string with leading blank(s)...\n\t\tvar j = 0, i = s.length;\n\t\t// Iterate from the far left of string until we\n\t\t// don't have any more whitespace...\n\t\twhile (j < i && whitespace.indexOf(s.charAt(j)) != -1)\n\t\t\tj++;\n\t\t// Get the substring from the first non-whitespace\n\t\t// character to the end of the string...\n\t\ts = s.substring(j, i);\n\t}\n\treturn s;\n}\n// Trims all spaces to the right of a specific string\nfunction RTrim(str) {\n\t// We don't want to trip JUST spaces, but also tabs,\n\t// line feeds, etc. Add anything else you want to\n\t// \"trim\" here in whitespace\n\tvar whitespace = new String(\" \\t\\n\\r \");\n\t// last space character is not a space, but alt+0160,\n\t// another invisible char.\n\tvar s = new String(str);\n\tif (whitespace.indexOf(s.charAt(s.length - 1)) != -1) {\n\t\t// We have a string with trailing blank(s)...\n\t\tvar i = s.length - 1; // Get length of string\n\t\t// Iterate from the far right of string until we\n\t\t// don't have any more whitespace...\n\t\twhile (i >= 0 && whitespace.indexOf(s.charAt(i)) != -1)\n\t\t\ti--;\n\t\t// Get the substring from the front of the string to\n\t\t// where the last non-whitespace character is...\n\t\ts = s.substring(0, i + 1);\n\t}\n\treturn s;\n}\n\n// Trims all spaces to the left and right of a specific string by calling RTim and LTrim\nfunction Trim(str) {\n\treturn RTrim(LTrim(str));\n}\nfunction autotab(original, destination) {\n\tif (original.getAttribute\n\t\t\t&& original.value.length == original.getAttribute(\"maxlength\"))\n\t\tdestination.focus();\n}\nfunction mask(obj, no) {\n\tvar val = new String(obj);\n\tvar len = val.length;\n\tif (len > no) {\n\t\tvar count = 0;\n\t\tvar ret = '';\n\t\twhile (count < len - no) {\n\t\t\tret = ret + '*';\n\t\t\tcount++;\n\t\t}\n\t\tdocument.write(ret + val.substring(len - no, len));\n\t\treturn;\n\t}\n\tdocument.write(obj);\n\treturn;\n}\nfunction showPopUp(el) {\n\tvar cvr = document.getElementById(\"cover\");\n\tvar dlg = document.getElementById(el);\n\tcvr.style.width = \"100%\";\n\tcvr.style.height = \"800px\";\n\tcvr.style.display = \"block\";\n\tdlg.style.display = \"block\";\n\tdlg.style.left = \"300px\";\n\tdlg.style.top = \"100px\";\n\tdlg.style.height = \"450px\";\n\tdlg.style.overflow = \"auto\";\n\tdlg.style.overflowY = \"scroll\";\n\tcvr.style.overflowY = \"scroll\";\n\t/*if (document.body.style.overflow = \"hidden\") {\n\t\tcvr.style.width = \"100%\";\n\t\tcvr.style.height = \"100%\";\n\t}*/\n}\nfunction closePopUp(el) {\n\tvar cvr = document.getElementById(\"cover\");\n\tvar dlg = document.getElementById(el);\n\tcvr.style.display = \"none\";\n\tdlg.style.display = \"none\";\n\tdocument.body.style.overflowY = \"scroll\";\n}\nfunction agree(checked) {\n\tif (checked) {\n\t\tdocument.getElementsByName(\"method\")[0].disabled = false;\n\t} else {\n\t\tdocument.getElementsByName(\"method\")[0].disabled = true;\n\t}\n}\nfunction submitAgreement() {\n\tdocument.forms[0].action = \"enrollDisplay.do?\";\n\tdocument.forms[0].submit();\n\tclosePopUp('dialog');\n}","markers":{"markers":{"1":{"id":1,"range":[[99,9],[99,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":117,"autoscroll":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts/common.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0771695e1c291c4578c7c68a9397a086667028a9","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":7,"items":[{"id":49,"softTabs":false,"displayBuffer":{"id":50,"softWrap":false,"editorWidthInChars":null,"scrollTop":1348,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/welcome/welcome-body.jsp","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":71,"softTabs":false,"displayBuffer":{"id":72,"softWrap":false,"editorWidthInChars":null,"scrollTop":521,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/header.jsp","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":82,"softTabs":false,"displayBuffer":{"id":83,"softWrap":false,"editorWidthInChars":null,"scrollTop":1241,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/WEB-INF/struts-config.xml","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":109,"softTabs":false,"displayBuffer":{"id":110,"softWrap":false,"editorWidthInChars":null,"scrollTop":23096,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":117,"softTabs":false,"displayBuffer":{"id":118,"softWrap":false,"editorWidthInChars":null,"scrollTop":1806,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts/common.js","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":98,"softTabs":false,"displayBuffer":{"id":99,"softWrap":false,"editorWidthInChars":null,"scrollTop":4796,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/Agreement.jsp","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts/common.js","focused":false,"deserializer":"Pane"},"activePaneId":7,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-html","language-javascript","language-xml","language-java"],"deserializer":"Workspace"},"packageStates":{"coffee-lint":{"height":0},"command-logger":{"eventLog":{"find-and-replace:show":{"count":4,"name":"find-and-replace:show","lastRun":1407342933195},"core:confirm":{"count":22,"name":"core:confirm","lastRun":1407342936849},"core:cancel":{"count":7,"name":"core:cancel","lastRun":1407342903574},"core:copy":{"count":3,"name":"core:copy","lastRun":1407342848358},"project-find:show":{"count":4,"name":"project-find:show","lastRun":1407342852628},"core:paste":{"count":2,"name":"core:paste","lastRun":1407342849060},"core:move-down":{"count":1,"name":"core:move-down","lastRun":1407335297358},"core:move-up":{"count":1,"name":"core:move-up","lastRun":1407335298011},"core:select-all":{"count":1,"name":"core:select-all","lastRun":1407339359171},"fuzzy-finder:toggle-file-finder":{"count":3,"name":"fuzzy-finder:toggle-file-finder","lastRun":1407342260682},"core:backspace":{"count":2,"name":"core:backspace","lastRun":1407341486789},"goto:file-symbol":{"count":7,"name":"goto:file-symbol","lastRun":1407342901327},"tree-view:toggle":{"count":1,"name":"tree-view:toggle","lastRun":1407341492893}}},"goto":{"entries":{"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java":[{"name":"EnrollAction","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":40,"column":13}},{"name":"Load","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":43,"column":22}},{"name":"customValidateSave","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":84,"column":22}},{"name":"validateLoginInfo","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":147,"column":22}},{"name":"validatePersonalInfo","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":199,"column":22}},{"name":"validateAddressInfo","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":292,"column":22}},{"name":"validatePassword","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":338,"column":17}},{"name":"validateNumeric","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":347,"column":17}},{"name":"validateDateOfBirth","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":354,"column":17}},{"name":"validateExpiredDate","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":391,"column":17}},{"name":"Save","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":420,"column":22}},{"name":"Next","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":511,"column":22}},{"name":"Edit","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":560,"column":22}},{"name":"unspecified","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":656,"column":22}},{"name":"Submit","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":693,"column":22}},{"name":"prepareSuccessEnrollResponse","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1063,"column":16}},{"name":"prepareSuccessEnrollOTBOnlyResponse","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1093,"column":16}},{"name":"prepareSuccessEnrollACHOptOutResponse","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1123,"column":16}},{"name":"prepareSuccessSaveResponse","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1153,"column":16}},{"name":"prepareDeclineEnrollResponse","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1170,"column":16}},{"name":"validateCaptcha","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1186,"column":17}},{"name":"loadSession","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1194,"column":14}},{"name":"loadEnrollSession","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1239,"column":14}},{"name":"populateEnrollHelper","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1282,"column":22}},{"name":"prepareSystemErrorMessage","path":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java","position":{"row":1318,"column":16}}],"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts/common.js":null}},"local-history":{"localHistoryViewState":""},"find-and-replace":{"viewState":{"findHistory":["enroll","submitAgreement","method"],"replaceHistory":[],"modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false}},"projectViewState":{"findHistory":["enrollDisplay","Agreement.jsp","Load","submitAgreement"],"replaceHistory":[],"pathsHistory":[],"modelState":{"useRegex":false,"caseSensitive":false}},"resultsModelState":{"useRegex":false,"caseSensitive":false}},"fuzzy-finder":{"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/welcome/welcome-body.jsp":1407334910998,"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/header.jsp":1407334806102,"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/WEB-INF/struts-config.xml":1407341756508,"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/JavaSource/com/fis/cashlineapp/actions/EnrollAction.java":1407342896237,"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts/common.js":1407342952298,"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/common/Agreement.jsp":1407342911317},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":10477579},"tree-view":{"directoryExpansionStates":{"CashLine_UI":{"CashLineApp":{"WebContent":{"common":{},"enroll":{},"WEB-INF":{},"welcome":{}}}}},"selectedPath":"/Users/bryce/Code/git-origin/CashLine_UI/CashLineApp/WebContent/scripts","hasFocus":false,"attached":false,"scrollLeft":0,"scrollTop":0,"width":258}}}