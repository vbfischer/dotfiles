#!/usr/bin/env node

var exec = require('child_process').exec,
    moment = require('moment'),
    dateFormat = 'YYYY-MM-DD',
    currentDate = moment().format(dateFormat),
    lastWeekDate = moment().subtract('1', 'week').format(dateFormat);


  exec('svn log -q -r {' + lastWeekDate + '}:{' + currentDate + '} | grep "bfischer" | awk \'/\\|/ { print $1 } \'', function(error, stdout, stdin) {
    if(error) {
      console.log(error);
      exit(1);
    }

    if(!stdout) {
      console.log('no error but stdout is not set');
      exit(1);
    }

    var revisions = stdout.split('\n');
    var out = '';

    revisions.forEach(function(item) {
      if(item)
        out = out + ' -r ' + item;
    });

    var fileList = [];

    exec('svn log -qv' + out, function(error2, stdout2, stdin2) {
      var files = stdout2.split('\n');

      files.forEach(function(file) {
        var firstChar = file[0];
        if(firstChar === ' ') {
          var fileParts = file.split(/[ ]+/);
          var fileName = fileParts[fileParts.length - 1];
          var prefix;

          if(fileName.indexOf('branches') >= 0) {
            prefix = '/Applications/BEACON/branches/BEACON-5.5.0/';
          } else {
            prefix = '/Applications/BEACON/trunk/'
          }

          fileName = fileName.substr(prefix.length);
          if(!fileList.some(function(itm) {
            return itm === fileName;
          })) {
              fileList.push(fileName);
          }
        } else {
        }

        // if(file.indexOf('\t') == 0) {
        //   console.log(file);
        // } else {
        //   console.log('skipping...');
        // }
      });

      console.log(fileList.join('\n'));
    });
  });

this.getRevisions = function() {

}
// currentWeekDate=$(date +%Y-%m-%d)
// lastWeekDate=$(date -v-7d +%Y-%m-%d)
//
// myRevisions=$(svn log -q -r {"$lastWeekDate"}:{"$currentWeekDate"} | grep 'bfischer' | awk '/\|/ { print $1 }')
//
// files=()
//
// for revision in $myRevisions
// do
//   echo $revision
//   tmp=$(svn log -qv -r $revision --xml)
//
//   sed -n 's|<path>\(.*\)</path>|\1|p'
// #  files+=$tmp
//
//   break
// done
